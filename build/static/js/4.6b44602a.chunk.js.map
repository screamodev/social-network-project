{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateUserStatus","autoFocus","ProfileInfo","profile","src","photos","large","userPhoto","className","classes","userProfileImg","fullName","aboutMe","Post","item","alt","message","likeCount","maxLength10","maxLengthCreator","PostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","name","validate","required","MyPosts","postsElements","postsData","map","post","likesCount","formData","addPost","newPostText","console","log","posts","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","React","Component","compose","auth","isLogin","withRouter"],"mappings":"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","file":"static/js/4.6b44602a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userProfileImg\":\"ProfileInfo_userProfileImg__3T_xl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__R6Jlo\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","import React, { useEffect, useState } from \"react\";\n\nconst ProfileStatusWithHooks = (props) => {\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\nuseEffect(()=> {\n  setStatus(props.status)\n}, [props.status]) //sync when status changed \n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateUserStatus(status);\n  };\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n    \n  };\n\n  return (\n    <div>\n      {!editMode && (\n        <div>\n          <span onDoubleClick={activateEditMode}>\n            status: {props.status || \"none\"}\n          </span>\n        </div>\n      )}\n      {editMode && (\n        <div>\n          <input\n            onChange={onStatusChange}\n            onBlur={deactivateEditMode}\n            autoFocus={true}\n            value={status}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatusWithHooks;\n","import React from \"react\";\nimport PreLoader from \"../../common/preLoader/preLoader\";\nimport userPhoto from \"../../../assets/images/default_userAvatar.png\";\nimport classes from \"./ProfileInfo.module.css\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\n\nconst ProfileInfo = ({profile, status, updateUserStatus}) => {\n\nif (!profile) {\n  return <PreLoader />\n}\n\n  return (\n    <div>\n      <div>\n        {/* <img\n          src=\"https://st.depositphotos.com/1000943/3414/i/600/depositphotos_34147625-stock-photo-grand-canal-in-venice.jpg\"\n          alt=\"\"\n        ></img> */}\n      </div>\n      <div>\n        <img src={profile.photos.large != null ? profile.photos.large : userPhoto} className={classes.userProfileImg}/>\n        <ProfileStatusWithHooks status={status} updateUserStatus={updateUserStatus}/>\n        <div>name: {profile.fullName}</div>\n        <div>about: {profile.aboutMe || \"none\"}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React from \"react\";\nimport classes from \"./Post.module.css\";\n\nconst Post = (props) => {\n  return (\n    <div className={classes.item}>\n      <img src=\"https://citaty.info/files/portraits/67069.jpg\" alt=\"\" />\n      {props.message}\n      <div>\n        <span>Like {props.likeCount}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Textarea } from \"../../common/FormControls/FormsControls\";\nimport { maxLengthCreator, required } from \"../../../utils/validators/index\";\n\nimport classes from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\n\nconst MyPosts = (props) => {\n  let postsElements = props.postsData.map((post) => (\n    <Post message={post.message} likesCount={post.likesCount} />\n  ));\n\n  let addNewPost = (formData) => {\n    props.addPost(formData.newPostText);\n    console.log(formData);\n  };\n\n  return (\n    <div>\n      <div>My posts</div>\n      <div>\n        new Posts\n        <PostFormRedux onSubmit={addNewPost} />\n      </div>\n      <div className={classes.posts}>{postsElements}</div>\n    </div>\n  );\n};\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst PostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          component={Textarea}\n          placeholder=\"Whats up?\"\n          name=\"newPostText\"\n          validate={[required, maxLength10]}\n        />\n      </div>\n      <button>Add post</button>\n      {/* <button>Remove</button> */}\n    </form>\n  );\n};\n\nconst PostFormRedux = reduxForm({\n  form: \"post\",\n})(PostForm);\n\nexport default MyPosts;\n","import {\n  addPostActionCreator,\n} from \"../../../redux/profileReducer\";\nimport MyPosts from \"./MyPosts\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n    postsData: state.profilePage.postsData,\n    newPostText: state.profilePage.newPostText,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (formData) => {\n      dispatch(addPostActionCreator(formData));\n    },\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts); // конект создает контейнерную колмпоненту\n\nexport default MyPostsContainer;\n","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n  return (\n    <div>\n      <ProfileInfo\n        profile={props.profile}\n        status={props.status}\n        updateUserStatus={props.updateUserStatus}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { compose } from \"redux\";\nimport { getUserProfile, getUserStatus, updateUserStatus } from \"../../redux/profileReducer\";\nimport Profile from \"./Profile\";\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n    \n    if (!userId) {\n\n       userId = this.props.authorizedUserId\n       if(!userId) {\n         this.props.history.push('/login')\n       }\n    }\n    this.props.getUserProfile(userId);\n    this.props.getUserStatus(userId)\n  }\n\n  render() {\n    return <Profile {...this.props}/>;\n  }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,    \n    status: state.profilePage.status, \n    authorizedUserId: state.auth.userId,\n    isLogin: state.auth.isLogin   \n  });\n\nexport default compose(\n  connect(mapStateToProps, { getUserProfile, getUserStatus, updateUserStatus }),\n  withRouter,\n  //withAuthRedirect //эдакий конвейер снизу вверх\n)(ProfileContainer);\n"],"sourceRoot":""}