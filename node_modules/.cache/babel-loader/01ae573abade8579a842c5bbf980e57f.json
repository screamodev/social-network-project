{"ast":null,"code":"var _jsxFileName = \"/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/Users/UsersContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { followAC, setCurrentPageAC, setUsersAC, setUsersTotalCountAC, unfollowAC } from \"../../redux/usersReducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users.jsx\";\nimport Loader from \"../loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 33\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        selectedPage: this.props.selectedPage,\n        unfollow: this.props.unfollow,\n        follow: this.props.follow,\n        usersData: this.props.usersData,\n        onPageChanged: this.onPageChanged,\n        usersData: this.props.usersData,\n        isFetching: this.props.isFetching\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    usersData: state.usersPage.usersData,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(followAC(userId));\n    },\n    unfollow: userId => {\n      dispatch(unfollowAC(userId));\n    },\n    setUsers: usersData => {\n      dispatch(setUsersAC(usersData));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPageAC(pageNumber));\n    },\n    setTotalUsersCount: totalCount => {\n      dispatch(setUsersTotalCountAC(totalCount));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersComponent);","map":{"version":3,"sources":["/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/Users/UsersContainer.jsx"],"names":["React","connect","followAC","setCurrentPageAC","setUsersAC","setUsersTotalCountAC","unfollowAC","axios","Users","Loader","UsersComponent","Component","onPageChanged","pageNumber","props","setCurrentPage","get","currentPage","pageSize","then","response","setUsers","data","items","componentDidMount","setTotalUsersCount","totalCount","render","isFetching","totalUsersCount","selectedPage","unfollow","follow","usersData","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","userId"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { followAC, setCurrentPageAC, setUsersAC, setUsersTotalCountAC, unfollowAC } from \"../../redux/usersReducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users.jsx\";\nimport Loader from \"../loader/Loader\";\n\n\n\nclass UsersComponent extends React.Component {\n  componentDidMount() {\n    axios\n      .get(\n        `https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`\n      )\n      .then((response) => {\n        this.props.setUsers(response.data.items);\n        this.props.setTotalUsersCount(response.data.totalCount);\n      });\n  }\n\n  onPageChanged = (pageNumber) => {\n    this.props.setCurrentPage(pageNumber);\n    axios\n      .get(\n        `https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`\n      )\n      .then((response) => {\n        this.props.setUsers(response.data.items);\n      });\n  };\n\n  render() {\n    return (\n     \n      <>\n       {this.props.isFetching ? <Loader/> : null}\n      <Users\n        totalUsersCount={this.props.totalUsersCount}\n        pageSize={this.props.pageSize}\n        selectedPage={this.props.selectedPage}\n        unfollow={this.props.unfollow}\n        follow={this.props.follow}\n        usersData={this.props.usersData}\n        onPageChanged={this.onPageChanged}\n        usersData={this.props.usersData}\n        isFetching={this.props.isFetching}\n      />\n      </>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    usersData: state.usersPage.usersData,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    follow: (userId) => {\n      dispatch(followAC(userId));\n    },\n    unfollow: (userId) => {\n      dispatch(unfollowAC(userId));\n    },\n    setUsers: (usersData) => {\n      dispatch(setUsersAC(usersData));\n    },\n    setCurrentPage: (pageNumber) => {\n      dispatch(setCurrentPageAC(pageNumber));\n    },\n    setTotalUsersCount: (totalCount) => {\n      dispatch(setUsersTotalCountAC(totalCount));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersComponent);\n"]},"metadata":{},"sourceType":"module"}