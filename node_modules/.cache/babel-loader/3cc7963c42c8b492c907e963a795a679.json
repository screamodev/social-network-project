{"ast":null,"code":"import { authAPI } from \"../components/api/api\";\nimport { stopSubmit } from \"redux-form\";\nimport { getAuthUserData } from \"./authReducer\";\nconst INITIALIZED_SUCCESS = \"INITIALIZED-SUCCESS\"; //const TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\";\n\nlet initialState = {\n  initialized: false,\n  email: null,\n  login: null,\n  isLogin: false,\n  isFetching: true\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return { ...state,\n        initialized: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initializedSuccess = () => ({\n  type: INITIALIZED_SUCCESS\n}); //thunka\n\nexport const initializeApp = () => dispatch => {\n  dispatch(getAuthUserData());\n  dispatch(initializedSuccess());\n};\nexport const login = (email, password, rememberMe) => dispatch => {\n  authAPI.login(email, password, rememberMe).then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(getAuthUserData());\n    } else {\n      let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n      dispatch(stopSubmit(\"login\", {\n        _error: message\n      }));\n    }\n  });\n};\nexport const logout = () => dispatch => {\n  authAPI.logout().then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(setAuthUserData(null, null, null, false));\n    }\n  });\n}; //export const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\n\nexport default authReducer;","map":{"version":3,"sources":["/home/screamoviolence/myDream/js/react-practise/my-first-app/src/redux/appReducer.js"],"names":["authAPI","stopSubmit","getAuthUserData","INITIALIZED_SUCCESS","initialState","initialized","email","login","isLogin","isFetching","appReducer","state","action","type","initializedSuccess","initializeApp","dispatch","password","rememberMe","then","response","data","resultCode","message","messages","length","_error","logout","setAuthUserData","authReducer"],"mappings":"AAAA,SAASA,OAAT,QAAwB,uBAAxB;AACA,SAAQC,UAAR,QAAyB,YAAzB;AACA,SAASC,eAAT,QAAgC,eAAhC;AAEA,MAAMC,mBAAmB,GAAG,qBAA5B,C,CAEA;;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,KADI;AAEjBC,EAAAA,KAAK,EAAE,IAFU;AAGjBC,EAAAA,KAAK,EAAE,IAHU;AAIjBC,EAAAA,OAAO,EAAE,KAJQ;AAKjBC,EAAAA,UAAU,EAAE;AALK,CAAnB;;AAQA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,mBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELN,QAAAA,WAAW,EAAC;AAFP,OAAP;;AAIF;AACE,aAAOM,KAAP;AAPJ;AASD,CAVD;;AAYA,OAAO,MAAMG,kBAAkB,GAAG,OAAO;AACvCD,EAAAA,IAAI,EAAEV;AADiC,CAAP,CAA3B,C,CASP;;AAEA,OAAO,MAAMY,aAAa,GAAG,MAAOC,QAAD,IAAc;AAC/CA,EAAAA,QAAQ,CAACd,eAAe,EAAhB,CAAR;AACAc,EAAAA,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;AAGD,CALM;AAOP,OAAO,MAAMP,KAAK,GAAG,CAACD,KAAD,EAAQW,QAAR,EAAkBC,UAAlB,KAAkCF,QAAD,IAAc;AAClEhB,EAAAA,OAAO,CAACO,KAAR,CAAcD,KAAd,EAAoBW,QAApB,EAA6BC,UAA7B,EAAyCC,IAAzC,CAA+CC,QAAD,IAAc;AAC1D,QAAIA,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAoC;AAClCN,MAAAA,QAAQ,CAACd,eAAe,EAAhB,CAAR;AACD,KAFD,MAEO;AACL,UAAIqB,OAAO,GAAGH,QAAQ,CAACC,IAAT,CAAcG,QAAd,CAAuBC,MAAvB,GAAgC,CAAhC,GAAoCL,QAAQ,CAACC,IAAT,CAAcG,QAAd,CAAuB,CAAvB,CAApC,GAA+D,YAA7E;AACAR,MAAAA,QAAQ,CAACf,UAAU,CAAC,OAAD,EAAU;AAACyB,QAAAA,MAAM,EAAEH;AAAT,OAAV,CAAX,CAAR;AACD;AACF,GAPD;AAQD,CATM;AAWP,OAAO,MAAMI,MAAM,GAAG,MAAOX,QAAD,IAAc;AACxChB,EAAAA,OAAO,CAAC2B,MAAR,GAAiBR,IAAjB,CAAuBC,QAAD,IAAc;AAClC,QAAIA,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAoC;AAClCN,MAAAA,QAAQ,CAACY,eAAe,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,KAAhB,CAAhB,CAAR;AACD;AACF,GAJD;AAKD,CANM,C,CAQP;;AAEA,eAAeC,WAAf","sourcesContent":["import { authAPI } from \"../components/api/api\";\nimport {stopSubmit} from \"redux-form\"\nimport { getAuthUserData } from \"./authReducer\";\n\nconst INITIALIZED_SUCCESS = \"INITIALIZED-SUCCESS\";\n\n//const TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\";\n\nlet initialState = {\n  initialized: false,\n  email: null,\n  login: null,\n  isLogin: false,\n  isFetching: true,\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return {\n        ...state,\n        initialized:true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const initializedSuccess = () => ({\n  type: INITIALIZED_SUCCESS,\n});\n\n\n\n\n\n\n//thunka\n\nexport const initializeApp = () => (dispatch) => {\n  dispatch(getAuthUserData())\n  dispatch(initializedSuccess\n    ())\n\n};\n\nexport const login = (email, password, rememberMe) => (dispatch) => {\n  authAPI.login(email,password,rememberMe).then((response) => {\n    if (response.data.resultCode === 0) {\n      dispatch(getAuthUserData())\n    } else {\n      let message = response.data.messages.length > 0 ? response.data.messages[0]: \"Some error\"\n      dispatch(stopSubmit(\"login\", {_error: message}))\n    }\n  });\n};\n\nexport const logout = () => (dispatch) => {\n  authAPI.logout().then((response) => {\n    if (response.data.resultCode === 0) {\n      dispatch(setAuthUserData(null,null,null,false))\n    }\n  });\n};\n\n//export const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\n\nexport default authReducer;\n"]},"metadata":{},"sourceType":"module"}