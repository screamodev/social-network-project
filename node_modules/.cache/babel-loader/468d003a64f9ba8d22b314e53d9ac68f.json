{"ast":null,"code":"const ADD_POST = \"ADD-POST\";\nconst ADD_UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\nconst UPDATE_NEW_MESSAGE_BODY = \"UPDATE-NEW-MESSSAGE-BODY\";\nlet store = {\n  _state: {\n    //posts\n    profilePage: {\n      postsData: [{\n        id: 1,\n        message: \"Hi, i am john\",\n        likesCount: 12\n      }, {\n        id: 2,\n        message: \"welcome\",\n        likesCount: 18\n      }],\n      newPostText: \"\"\n    },\n    //dialogs\n    dialogsPage: {\n      dialogsData: [{\n        id: 1,\n        name: \"John\"\n      }, {\n        id: 2,\n        name: \"Alan\"\n      }, {\n        id: 3,\n        name: \"Alex\"\n      }, {\n        id: 4,\n        name: \"Sofia\"\n      }],\n      messagesData: [{\n        id: 1,\n        message: \"hi\"\n      }, {\n        id: 2,\n        message: \"hello\"\n      }, {\n        id: 3,\n        message: \"how are you\"\n      }],\n      newMessageBody: \"\"\n    },\n    //sidebar\n    sideBar: {}\n  },\n\n  _callSubcriber() {\n    console.log(\"state changed\");\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(callback) {\n    this._callSubcriber = callback;\n  },\n\n  _addPost() {\n    let newPost = {\n      id: this._state.profilePage.postsData.length + 1,\n      message: this._state.profilePage.newPostText,\n      likesCount: 0\n    };\n\n    this._state.profilePage.postsData.push(newPost);\n\n    this._state.profilePage.newPostText = \"\";\n\n    this._callSubcriber(this._state);\n  },\n\n  _updateNewPostText(newText) {\n    this._state.profilePage.newPostText = newText;\n\n    this._callSubcriber(this._state);\n  },\n\n  _updateNewMessageBody() {\n    this._state.dialogsPage.newMessageBody = action.body;\n\n    this._callSubcriber(this._state);\n  },\n\n  dispatch(action) {\n    if (action.type === ADD_POST) {\n      this._addPost();\n    }\n\n    if (action.type === ADD_UPDATE_NEW_POST_TEXT) {\n      this._updateNewPostText(action.newText);\n    }\n\n    if (action.type === UPDATE_NEW_MESSAGE_BODY) {\n      this._updateNewMessageBody();\n    }\n  }\n\n};\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const onPostChangeActionCreator = text => ({\n  type: ADD_UPDATE_NEW_POST_TEXT,\n  newText: text\n});\nexport default store;","map":{"version":3,"sources":["/home/screamoviolence/myDream/js/react-practise/my-first-app/src/redux/state.js"],"names":["ADD_POST","ADD_UPDATE_NEW_POST_TEXT","UPDATE_NEW_MESSAGE_BODY","store","_state","profilePage","postsData","id","message","likesCount","newPostText","dialogsPage","dialogsData","name","messagesData","newMessageBody","sideBar","_callSubcriber","console","log","getState","subscribe","callback","_addPost","newPost","length","push","_updateNewPostText","newText","_updateNewMessageBody","action","body","dispatch","type","addPostActionCreator","onPostChangeActionCreator","text"],"mappings":"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","sourcesContent":["const ADD_POST = \"ADD-POST\";\nconst ADD_UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\nconst UPDATE_NEW_MESSAGE_BODY = \"UPDATE-NEW-MESSSAGE-BODY\";\n\nlet store = {\n  _state: {\n    //posts\n\n    profilePage: {\n      postsData: [\n        { id: 1, message: \"Hi, i am john\", likesCount: 12 },\n        { id: 2, message: \"welcome\", likesCount: 18 },\n      ],\n      newPostText: \"\",\n    },\n    //dialogs\n    dialogsPage: {\n      dialogsData: [\n        { id: 1, name: \"John\" },\n        { id: 2, name: \"Alan\" },\n        { id: 3, name: \"Alex\" },\n        { id: 4, name: \"Sofia\" },\n      ],\n      messagesData: [\n        { id: 1, message: \"hi\" },\n        { id: 2, message: \"hello\" },\n        { id: 3, message: \"how are you\" },\n      ],\n      newMessageBody: \"\"\n    },\n    //sidebar\n    sideBar: {},\n  },\n  _callSubcriber() {\n    console.log(\"state changed\");\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(callback) {\n    this._callSubcriber = callback;\n  },\n\n  _addPost() {\n    let newPost = {\n      id: this._state.profilePage.postsData.length + 1,\n      message: this._state.profilePage.newPostText,\n      likesCount: 0,\n    };\n\n    this._state.profilePage.postsData.push(newPost);\n    this._state.profilePage.newPostText = \"\";\n    this._callSubcriber(this._state);\n  },\n  _updateNewPostText(newText) {\n    this._state.profilePage.newPostText = newText;\n    this._callSubcriber(this._state);\n  },\n _updateNewMessageBody() {\n  this._state.dialogsPage.newMessageBody = action.body;\n  this._callSubcriber(this._state)\n },\n\n  dispatch(action) {\n    if (action.type === ADD_POST) {\n      this._addPost();\n    }\n    if (action.type === ADD_UPDATE_NEW_POST_TEXT) {\n      this._updateNewPostText(action.newText);\n    }\n    if (action.type === UPDATE_NEW_MESSAGE_BODY) {\n     this._updateNewMessageBody()\n    }\n  },\n};\n\nexport const addPostActionCreator = () => ({ type: ADD_POST });\n\nexport const onPostChangeActionCreator = (text) => ({\n  type: ADD_UPDATE_NEW_POST_TEXT,\n  newText: text,\n});\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}