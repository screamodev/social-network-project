{"ast":null,"code":"var _jsxFileName = \"/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/Users/UsersContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { followAC, setCurrentPageAC, setUsersAC, setUsersTotalCountAC, toggleIsFetchingAC, unfollowAC } from \"../../redux/usersReducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users.jsx\";\nimport PreLoader from \"../common/preLoader/preLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.toggleIsFetching(true);\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(PreLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 34\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        selectedPage: this.props.selectedPage,\n        unfollow: this.props.unfollow,\n        follow: this.props.follow,\n        usersData: this.props.usersData,\n        onPageChanged: this.onPageChanged,\n        usersData: this.props.usersData,\n        isFetching: this.props.isFetching\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    usersData: state.usersPage.usersData,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n}; // let mapDispatchToProps = (dispatch) => {\n//   return {\n//     follow: (userId) => {\n//       dispatch(followAC(userId));\n//     },\n//     unfollow: (userId) => {\n//       dispatch(unfollowAC(userId));\n//     },\n//     setUsers: (usersData) => {\n//       dispatch(setUsersAC(usersData));\n//     },\n//     setCurrentPage: (pageNumber) => {\n//       dispatch(setCurrentPageAC(pageNumber));\n//     },\n//     setTotalUsersCount: (totalCount) => {\n//       dispatch(setUsersTotalCountAC(totalCount));\n//     },\n//     toggleIsFetching: (isFetching) => {\n//       dispatch(toggleIsFetchingAC(isFetching));\n//     },\n//   };\n// };\n\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching\n})(UsersContainer);","map":{"version":3,"sources":["/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/Users/UsersContainer.jsx"],"names":["React","connect","followAC","setCurrentPageAC","setUsersAC","setUsersTotalCountAC","toggleIsFetchingAC","unfollowAC","axios","Users","PreLoader","UsersContainer","Component","onPageChanged","pageNumber","props","toggleIsFetching","setCurrentPage","get","currentPage","pageSize","then","response","setUsers","data","items","componentDidMount","setTotalUsersCount","totalCount","render","isFetching","totalUsersCount","selectedPage","unfollow","follow","usersData","mapStateToProps","state","usersPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,QADF,EAEEC,gBAFF,EAGEC,UAHF,EAIEC,oBAJF,EAKEC,kBALF,EAMEC,UANF,QAOO,0BAPP;AAQA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;;;;AAEA,MAAMC,cAAN,SAA6BX,KAAK,CAACY,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAc3CC,aAd2C,GAc1BC,UAAD,IAAgB;AAC9B,WAAKC,KAAL,CAAWC,gBAAX,CAA4B,IAA5B;AACA,WAAKD,KAAL,CAAWE,cAAX,CAA0BH,UAA1B;AACAN,MAAAA,KAAK,CACFU,GADH,CAEK,2DAA0D,KAAKH,KAAL,CAAWI,WAAY,UAAS,KAAKJ,KAAL,CAAWK,QAAS,EAFnH,EAIGC,IAJH,CAISC,QAAD,IAAc;AAClB,aAAKP,KAAL,CAAWC,gBAAX,CAA4B,KAA5B;AACA,aAAKD,KAAL,CAAWQ,QAAX,CAAoBD,QAAQ,CAACE,IAAT,CAAcC,KAAlC;AACD,OAPH;AAQD,KAzB0C;AAAA;;AAC3CC,EAAAA,iBAAiB,GAAG;AAClB,SAAKX,KAAL,CAAWC,gBAAX,CAA4B,IAA5B;AACAR,IAAAA,KAAK,CACFU,GADH,CAEK,2DAA0D,KAAKH,KAAL,CAAWI,WAAY,UAAS,KAAKJ,KAAL,CAAWK,QAAS,EAFnH,EAIGC,IAJH,CAISC,QAAD,IAAc;AAClB,WAAKP,KAAL,CAAWC,gBAAX,CAA4B,KAA5B;AACA,WAAKD,KAAL,CAAWQ,QAAX,CAAoBD,QAAQ,CAACE,IAAT,CAAcC,KAAlC;AACA,WAAKV,KAAL,CAAWY,kBAAX,CAA8BL,QAAQ,CAACE,IAAT,CAAcI,UAA5C;AACD,KARH;AASD;;AAeDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,iBACG,KAAKd,KAAL,CAAWe,UAAX,gBAAwB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAxB,GAAuC,IAD1C,eAEE,QAAC,KAAD;AACE,QAAA,eAAe,EAAE,KAAKf,KAAL,CAAWgB,eAD9B;AAEE,QAAA,QAAQ,EAAE,KAAKhB,KAAL,CAAWK,QAFvB;AAGE,QAAA,YAAY,EAAE,KAAKL,KAAL,CAAWiB,YAH3B;AAIE,QAAA,QAAQ,EAAE,KAAKjB,KAAL,CAAWkB,QAJvB;AAKE,QAAA,MAAM,EAAE,KAAKlB,KAAL,CAAWmB,MALrB;AAME,QAAA,SAAS,EAAE,KAAKnB,KAAL,CAAWoB,SANxB;AAOE,QAAA,aAAa,EAAE,KAAKtB,aAPtB;AAQE,QAAA,SAAS,EAAE,KAAKE,KAAL,CAAWoB,SARxB;AASE,QAAA,UAAU,EAAE,KAAKpB,KAAL,CAAWe;AATzB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAgBD;;AA5C0C;;AA+C7C,IAAIM,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACLF,IAAAA,SAAS,EAAEE,KAAK,CAACC,SAAN,CAAgBH,SADtB;AAELf,IAAAA,QAAQ,EAAEiB,KAAK,CAACC,SAAN,CAAgBlB,QAFrB;AAGLW,IAAAA,eAAe,EAAEM,KAAK,CAACC,SAAN,CAAgBP,eAH5B;AAILZ,IAAAA,WAAW,EAAEkB,KAAK,CAACC,SAAN,CAAgBnB,WAJxB;AAKLW,IAAAA,UAAU,EAAEO,KAAK,CAACC,SAAN,CAAgBR;AALvB,GAAP;AAOD,CARD,C,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe7B,OAAO,CAACmC,eAAD,EAAkB;AAACF,EAAAA,MAAD;AAAQD,EAAAA,QAAR;AAAiBV,EAAAA,QAAjB;AAA0BN,EAAAA,cAA1B;AAAyCU,EAAAA,kBAAzC;AAA4DX,EAAAA;AAA5D,CAAlB,CAAP,CAAwGL,cAAxG,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  followAC,\n  setCurrentPageAC,\n  setUsersAC,\n  setUsersTotalCountAC,\n  toggleIsFetchingAC,\n  unfollowAC,\n} from \"../../redux/usersReducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users.jsx\";\nimport PreLoader from \"../common/preLoader/preLoader\";\n\nclass UsersContainer extends React.Component {\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios\n      .get(\n        `https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`\n      )\n      .then((response) => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n        this.props.setTotalUsersCount(response.data.totalCount);\n      });\n  }\n\n  onPageChanged = (pageNumber) => {\n    this.props.toggleIsFetching(true);\n    this.props.setCurrentPage(pageNumber);\n    axios\n      .get(\n        `https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`\n      )\n      .then((response) => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n      });\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.isFetching ? <PreLoader/> : null}\n        <Users\n          totalUsersCount={this.props.totalUsersCount}\n          pageSize={this.props.pageSize}\n          selectedPage={this.props.selectedPage}\n          unfollow={this.props.unfollow}\n          follow={this.props.follow}\n          usersData={this.props.usersData}\n          onPageChanged={this.onPageChanged}\n          usersData={this.props.usersData}\n          isFetching={this.props.isFetching}\n        />\n      </>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    usersData: state.usersPage.usersData,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n  };\n};\n\n// let mapDispatchToProps = (dispatch) => {\n//   return {\n//     follow: (userId) => {\n//       dispatch(followAC(userId));\n//     },\n//     unfollow: (userId) => {\n//       dispatch(unfollowAC(userId));\n//     },\n//     setUsers: (usersData) => {\n//       dispatch(setUsersAC(usersData));\n//     },\n//     setCurrentPage: (pageNumber) => {\n//       dispatch(setCurrentPageAC(pageNumber));\n//     },\n//     setTotalUsersCount: (totalCount) => {\n//       dispatch(setUsersTotalCountAC(totalCount));\n//     },\n//     toggleIsFetching: (isFetching) => {\n//       dispatch(toggleIsFetchingAC(isFetching));\n//     },\n//   };\n// };\n\nexport default connect(mapStateToProps, {follow,unfollow,setUsers,setCurrentPage,setTotalUsersCount,toggleIsFetching})(UsersContainer);\n"]},"metadata":{},"sourceType":"module"}