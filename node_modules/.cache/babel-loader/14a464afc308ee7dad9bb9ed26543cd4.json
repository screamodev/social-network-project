{"ast":null,"code":"import * as axios from \"axios\";\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n  headers: {\n    \"API-KEY\": \"f1a176e4-de89-4bde-b937-0379a56cdd5c\"\n  }\n});\nexport const usersAPI = {\n  getUsers(currentPage = 1, pageSize = 5) {\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\n      return response.data;\n    });\n  },\n\n  follow(userId) {\n    return instance.post(`follow/${userId}`).then(response => {\n      return response.data;\n    });\n  },\n\n  unfollow(userId) {\n    return instance.delete(`follow/${userId}`).then(response => {\n      return response.data;\n    });\n  }\n\n};\nexport const authAPI = {\n  login(email, password, rememberMe = false) {\n    return instance.post(`auth/login`, {\n      email,\n      password,\n      rememberMe\n    }).then(data => {\n      return data;\n    });\n  },\n\n  logout() {\n    return instance.delete(`auth/login`).then(data => {\n      return data;\n    });\n  },\n\n  me() {\n    return instance.get(`auth/me`).then(response => {\n      return response.data;\n    });\n  }\n\n};\nexport const profileAPI = {\n  getUserProfile(userId) {\n    return instance.get(`profile/${userId}`).then(response => {\n      return response.data;\n    });\n  },\n\n  getUserStatus(userId) {\n    return instance.get(`profile/status/` + userId);\n  },\n\n  updateUserStatus(status) {\n    return instance.put(`profile/status`, {\n      status\n    });\n  }\n\n};","map":{"version":3,"sources":["/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/api/api.js"],"names":["axios","instance","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","authAPI","login","email","password","rememberMe","logout","me","profileAPI","getUserProfile","getUserStatus","updateUserStatus","status","put"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC5BC,EAAAA,eAAe,EAAE,IADW;AAE5BC,EAAAA,OAAO,EAAE,+CAFmB;AAG5BC,EAAAA,OAAO,EAAE;AAAE,eAAW;AAAb;AAHmB,CAAb,CAAjB;AAMA,OAAO,MAAMC,QAAQ,GAAG;AACtBC,EAAAA,QAAQ,CAACC,WAAW,GAAG,CAAf,EAAkBC,QAAQ,GAAG,CAA7B,EAAgC;AACtC,WAAOR,QAAQ,CACZS,GADI,CACC,cAAaF,WAAY,UAASC,QAAS,EAD5C,EAEJE,IAFI,CAEEC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAJI,CAAP;AAKD,GAPqB;;AAQtBC,EAAAA,MAAM,CAACC,MAAD,EAAS;AACb,WAAOd,QAAQ,CAACe,IAAT,CAAe,UAASD,MAAO,EAA/B,EAAkCJ,IAAlC,CAAwCC,QAAD,IAAc;AAC1D,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAFM,CAAP;AAGD,GAZqB;;AActBI,EAAAA,QAAQ,CAACF,MAAD,EAAS;AACf,WAAOd,QAAQ,CAACiB,MAAT,CAAiB,UAASH,MAAO,EAAjC,EAAoCJ,IAApC,CAA0CC,QAAD,IAAc;AAC5D,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAFM,CAAP;AAGD;;AAlBqB,CAAjB;AAqBP,OAAO,MAAMM,OAAO,GAAG;AACrBC,EAAAA,KAAK,CAACC,KAAD,EAAQC,QAAR,EAAkBC,UAAU,GAAG,KAA/B,EAAsC;AACzC,WAAOtB,QAAQ,CACZe,IADI,CACE,YADF,EACe;AAAEK,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,KADf,EAEJZ,IAFI,CAEEE,IAAD,IAAU;AACd,aAAOA,IAAP;AACD,KAJI,CAAP;AAKD,GAPoB;;AAQrBW,EAAAA,MAAM,GAAG;AACP,WAAOvB,QAAQ,CAACiB,MAAT,CAAiB,YAAjB,EAA8BP,IAA9B,CAAoCE,IAAD,IAAU;AAClD,aAAOA,IAAP;AACD,KAFM,CAAP;AAGD,GAZoB;;AAarBY,EAAAA,EAAE,GAAG;AACH,WAAOxB,QAAQ,CAACS,GAAT,CAAc,SAAd,EAAwBC,IAAxB,CAA8BC,QAAD,IAAc;AAChD,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAFM,CAAP;AAGD;;AAjBoB,CAAhB;AAoBP,OAAO,MAAMa,UAAU,GAAG;AACxBC,EAAAA,cAAc,CAACZ,MAAD,EAAS;AACrB,WAAOd,QAAQ,CAACS,GAAT,CAAc,WAAUK,MAAO,EAA/B,EAAkCJ,IAAlC,CAAwCC,QAAD,IAAc;AAC1D,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAFM,CAAP;AAGD,GALuB;;AAMxBe,EAAAA,aAAa,CAACb,MAAD,EAAS;AACpB,WAAOd,QAAQ,CAACS,GAAT,CAAc,iBAAD,GAAoBK,MAAjC,CAAP;AACD,GARuB;;AASxBc,EAAAA,gBAAgB,CAACC,MAAD,EAAS;AACvB,WAAO7B,QAAQ,CAAC8B,GAAT,CAAc,gBAAd,EAA+B;AAAED,MAAAA;AAAF,KAA/B,CAAP;AACD;;AAXuB,CAAnB","sourcesContent":["import * as axios from \"axios\";\n\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n  headers: { \"API-KEY\": \"f1a176e4-de89-4bde-b937-0379a56cdd5c\" },\n});\n\nexport const usersAPI = {\n  getUsers(currentPage = 1, pageSize = 5) {\n    return instance\n      .get(`users?page=${currentPage}&count=${pageSize}`)\n      .then((response) => {\n        return response.data;\n      });\n  },\n  follow(userId) {\n    return instance.post(`follow/${userId}`).then((response) => {\n      return response.data;\n    });\n  },\n\n  unfollow(userId) {\n    return instance.delete(`follow/${userId}`).then((response) => {\n      return response.data;\n    });\n  },\n};\n\nexport const authAPI = {\n  login(email, password, rememberMe = false) {\n    return instance\n      .post(`auth/login`, { email, password, rememberMe })\n      .then((data) => {\n        return data;\n      });\n  },\n  logout() {\n    return instance.delete(`auth/login`).then((data) => {\n      return data;\n    });\n  },\n  me() {\n    return instance.get(`auth/me`).then((response) => {\n      return response.data;\n    });\n  },\n};\n\nexport const profileAPI = {\n  getUserProfile(userId) {\n    return instance.get(`profile/${userId}`).then((response) => {\n      return response.data;\n    });\n  },\n  getUserStatus(userId) {\n    return instance.get(`profile/status/` + userId);\n  },\n  updateUserStatus(status) {\n    return instance.put(`profile/status`, { status });\n  },\n};\n"]},"metadata":{},"sourceType":"module"}