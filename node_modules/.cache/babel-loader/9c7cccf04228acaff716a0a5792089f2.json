{"ast":null,"code":"import { authAPI } from \"../components/api/api\";\nconst SET_USERS_DATA = \"SET-USERS-DATA\"; //const TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\";\n\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isLogin: false,\n  isFetching: true\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USERS_DATA:\n      return { ...state,\n        ...action.payload,\n        isLogin: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setAuthUserData = (userId, email, login, isLogin) => ({\n  type: SET_USERS_DATA,\n  payload: {\n    userId,\n    email,\n    login,\n    isLogin\n  }\n});\nexport const getAuthUserData = () => dispatch => {\n  authAPI.me().then(data => {\n    if (data.resultCode === 0) {\n      let {\n        id,\n        email,\n        login\n      } = data.data;\n      dispatch(setAuthUserData(id, email, login, true));\n    }\n  });\n}; //thunka\n\nexport const login = (email, password, rememberMe) => dispatch => {\n  authAPI.login(email, password, rememberMe).then(data => {\n    if (data.resultCode === 0) {\n      dispatch(getAuthUserData());\n    }\n  });\n};\nexport const logout = () => dispatch => {\n  authAPI.logout().then(data => {\n    if (data.resultCode === 0) {\n      dispatch(setAuthUserData(null, null, null, false));\n    }\n  });\n}; //export const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\n\nexport default authReducer;","map":{"version":3,"sources":["/home/screamoviolence/myDream/js/react-practise/my-first-app/src/redux/authReducer.js"],"names":["authAPI","SET_USERS_DATA","initialState","userId","email","login","isLogin","isFetching","authReducer","state","action","type","payload","setAuthUserData","getAuthUserData","dispatch","me","then","data","resultCode","id","password","rememberMe","logout"],"mappings":"AAAA,SAASA,OAAT,QAAwB,uBAAxB;AAEA,MAAMC,cAAc,GAAG,gBAAvB,C,CAEA;;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,IADS;AAEjBC,EAAAA,KAAK,EAAE,IAFU;AAGjBC,EAAAA,KAAK,EAAE,IAHU;AAIjBC,EAAAA,OAAO,EAAE,KAJQ;AAKjBC,EAAAA,UAAU,EAAE;AALK,CAAnB;;AAQA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,cAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAEL,WAAGC,MAAM,CAACE,OAFL;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF;AACE,aAAOG,KAAP;AARJ;AAUD,CAXD;;AAaA,OAAO,MAAMI,eAAe,GAAG,CAACV,MAAD,EAASC,KAAT,EAAgBC,KAAhB,EAAuBC,OAAvB,MAAoC;AACjEK,EAAAA,IAAI,EAAEV,cAD2D;AAEjEW,EAAAA,OAAO,EAAC;AAAET,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA;AAAxB;AAFyD,CAApC,CAAxB;AAQP,OAAO,MAAMQ,eAAe,GAAG,MAAOC,QAAD,IAAc;AACjDf,EAAAA,OAAO,CAACgB,EAAR,GAAaC,IAAb,CAAmBC,IAAD,IAAU;AAC1B,QAAIA,IAAI,CAACC,UAAL,KAAoB,CAAxB,EAA2B;AACzB,UAAI;AAAEC,QAAAA,EAAF;AAAMhB,QAAAA,KAAN;AAAaC,QAAAA;AAAb,UAAuBa,IAAI,CAACA,IAAhC;AACAH,MAAAA,QAAQ,CAACF,eAAe,CAACO,EAAD,EAAKhB,KAAL,EAAYC,KAAZ,EAAmB,IAAnB,CAAhB,CAAR;AACD;AACF,GALD;AAMD,CAPM,C,CASP;;AAEA,OAAO,MAAMA,KAAK,GAAG,CAACD,KAAD,EAAQiB,QAAR,EAAkBC,UAAlB,KAAkCP,QAAD,IAAc;AAClEf,EAAAA,OAAO,CAACK,KAAR,CAAcD,KAAd,EAAoBiB,QAApB,EAA6BC,UAA7B,EAAyCL,IAAzC,CAA+CC,IAAD,IAAU;AACtD,QAAIA,IAAI,CAACC,UAAL,KAAoB,CAAxB,EAA2B;AACzBJ,MAAAA,QAAQ,CAACD,eAAe,EAAhB,CAAR;AACD;AACF,GAJD;AAKD,CANM;AAQP,OAAO,MAAMS,MAAM,GAAG,MAAOR,QAAD,IAAc;AACxCf,EAAAA,OAAO,CAACuB,MAAR,GAAiBN,IAAjB,CAAuBC,IAAD,IAAU;AAC9B,QAAIA,IAAI,CAACC,UAAL,KAAoB,CAAxB,EAA2B;AACzBJ,MAAAA,QAAQ,CAACF,eAAe,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,KAAhB,CAAhB,CAAR;AACD;AACF,GAJD;AAKD,CANM,C,CAQP;;AAEA,eAAeL,WAAf","sourcesContent":["import { authAPI } from \"../components/api/api\";\n\nconst SET_USERS_DATA = \"SET-USERS-DATA\";\n\n//const TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\";\n\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isLogin: false,\n  isFetching: true,\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USERS_DATA:\n      return {\n        ...state,\n        ...action.payload,\n        isLogin: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const setAuthUserData = (userId, email, login, isLogin) => ({\n  type: SET_USERS_DATA,\n  payload:{ userId, email, login, isLogin },\n});\n\n\n\n\nexport const getAuthUserData = () => (dispatch) => {\n  authAPI.me().then((data) => {\n    if (data.resultCode === 0) {\n      let { id, email, login } = data.data;\n      dispatch(setAuthUserData(id, email, login, true));\n    }\n  });\n};\n\n//thunka\n\nexport const login = (email, password, rememberMe) => (dispatch) => {\n  authAPI.login(email,password,rememberMe).then((data) => {\n    if (data.resultCode === 0) {\n      dispatch(getAuthUserData())\n    }\n  });\n};\n\nexport const logout = () => (dispatch) => {\n  authAPI.logout().then((data) => {\n    if (data.resultCode === 0) {\n      dispatch(setAuthUserData(null,null,null,false))\n    }\n  });\n};\n\n//export const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\n\nexport default authReducer;\n"]},"metadata":{},"sourceType":"module"}