{"ast":null,"code":"const FOLLOW = \"FOLlOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET-USERS\";\nconst SET_CURRENT_PAGE = \"SET-CURRENT-PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"SET-TOTAL-USERS-COUNT\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\";\nlet initialState = {\n  usersData: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        usersData: state.usersData.map(user => {\n          if (user.id === action.userId) {\n            return { ...user,\n              followed: true\n            };\n          }\n\n          return user;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        usersData: state.usersData.map(user => {\n          if (user.id === action.userId) {\n            return { ...user,\n              followed: false\n            };\n          }\n\n          return user;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        usersData: action.usersData\n      };\n\n    case SET_CURRENT_PAGE:\n      return { ...state,\n        currentPage: action.currentPage\n      };\n\n    case SET_TOTAL_USERS_COUNT:\n      return { ...state,\n        totalUsersCount: action.count\n      };\n\n    case TOGGLE_IS_FETCHING:\n      return { ...state,\n        isFetching: action.isFetching\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const follow = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollow = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsers = usersData => ({\n  type: SET_USERS,\n  usersData\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setUsersTotalCount = count => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport default usersReducer;","map":{"version":3,"sources":["/home/screamoviolence/myDream/js/react-practise/my-first-app/src/redux/usersReducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","initialState","usersData","pageSize","totalUsersCount","currentPage","isFetching","usersReducer","state","action","type","map","user","id","userId","followed","count","follow","unfollow","setUsers","setCurrentPage","setUsersTotalCount","toggleIsFetching"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,qBAAqB,GAAG,uBAA9B;AAEA,MAAMC,kBAAkB,GAAG,oBAA3B;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,QAAQ,EAAE,CAFO;AAGjBC,EAAAA,eAAe,EAAE,CAHA;AAIjBC,EAAAA,WAAW,EAAE,CAJI;AAKjBC,EAAAA,UAAU,EAAE;AALK,CAAnB;;AAQA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,MAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELN,QAAAA,SAAS,EAAEM,KAAK,CAACN,SAAN,CAAgBS,GAAhB,CAAqBC,IAAD,IAAU;AACvC,cAAIA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACK,MAAvB,EAA+B;AAC7B,mBAAO,EAAE,GAAGF,IAAL;AAAWG,cAAAA,QAAQ,EAAE;AAArB,aAAP;AACD;;AACD,iBAAOH,IAAP;AACD,SALU;AAFN,OAAP;;AAUF,SAAKhB,QAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELN,QAAAA,SAAS,EAAEM,KAAK,CAACN,SAAN,CAAgBS,GAAhB,CAAqBC,IAAD,IAAU;AACvC,cAAIA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACK,MAAvB,EAA+B;AAC7B,mBAAO,EAAE,GAAGF,IAAL;AAAWG,cAAAA,QAAQ,EAAE;AAArB,aAAP;AACD;;AACD,iBAAOH,IAAP;AACD,SALU;AAFN,OAAP;;AAUF,SAAKf,SAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELN,QAAAA,SAAS,EAAEO,MAAM,CAACP;AAFb,OAAP;;AAIF,SAAKJ,gBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELH,QAAAA,WAAW,EAAEI,MAAM,CAACJ;AAFf,OAAP;;AAIF,SAAKN,qBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,eAAe,EAAEK,MAAM,CAACO;AAFnB,OAAP;;AAIF,SAAKhB,kBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELF,QAAAA,UAAU,EAAEG,MAAM,CAACH;AAFd,OAAP;;AAIF;AACE,aAAOE,KAAP;AA5CJ;AA8CD,CA/CD;;AAiDA,OAAO,MAAMS,MAAM,GAAIH,MAAD,KAAa;AAAEJ,EAAAA,IAAI,EAAEf,MAAR;AAAgBmB,EAAAA;AAAhB,CAAb,CAAf;AACP,OAAO,MAAMI,QAAQ,GAAIJ,MAAD,KAAa;AAAEJ,EAAAA,IAAI,EAAEd,QAAR;AAAkBkB,EAAAA;AAAlB,CAAb,CAAjB;AACP,OAAO,MAAMK,QAAQ,GAAIjB,SAAD,KAAgB;AAAEQ,EAAAA,IAAI,EAAEb,SAAR;AAAmBK,EAAAA;AAAnB,CAAhB,CAAjB;AACP,OAAO,MAAMkB,cAAc,GAAIf,WAAD,KAAkB;AAC9CK,EAAAA,IAAI,EAAEZ,gBADwC;AAE9CO,EAAAA;AAF8C,CAAlB,CAAvB;AAIP,OAAO,MAAMgB,kBAAkB,GAAIL,KAAD,KAAY;AAC5CN,EAAAA,IAAI,EAAEX,qBADsC;AAE5CiB,EAAAA;AAF4C,CAAZ,CAA3B;AAIP,OAAO,MAAMM,gBAAgB,GAAIhB,UAAD,KAAiB;AAAEI,EAAAA,IAAI,EAAEV,kBAAR;AAA4BM,EAAAA;AAA5B,CAAjB,CAAzB;AAGP,eAAeC,YAAf","sourcesContent":["const FOLLOW = \"FOLlOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET-USERS\";\nconst SET_CURRENT_PAGE = \"SET-CURRENT-PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"SET-TOTAL-USERS-COUNT\";\n\nconst TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\";\n\nlet initialState = {\n  usersData: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        usersData: state.usersData.map((user) => {\n          if (user.id === action.userId) {\n            return { ...user, followed: true };\n          }\n          return user;\n        }),\n      };\n\n    case UNFOLLOW:\n      return {\n        ...state,\n        usersData: state.usersData.map((user) => {\n          if (user.id === action.userId) {\n            return { ...user, followed: false };\n          }\n          return user;\n        }),\n      };\n\n    case SET_USERS:\n      return {\n        ...state,\n        usersData: action.usersData,\n      };\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.currentPage,\n      };\n    case SET_TOTAL_USERS_COUNT:\n      return {\n        ...state,\n        totalUsersCount: action.count,\n      };\n    case TOGGLE_IS_FETCHING:\n      return {\n        ...state,\n        isFetching: action.isFetching,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const follow = (userId) => ({ type: FOLLOW, userId });\nexport const unfollow = (userId) => ({ type: UNFOLLOW, userId });\nexport const setUsers = (usersData) => ({ type: SET_USERS, usersData });\nexport const setCurrentPage = (currentPage) => ({\n  type: SET_CURRENT_PAGE,\n  currentPage,\n});\nexport const setUsersTotalCount = (count) => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count,\n});\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\n\n\nexport default usersReducer;\n"]},"metadata":{},"sourceType":"module"}