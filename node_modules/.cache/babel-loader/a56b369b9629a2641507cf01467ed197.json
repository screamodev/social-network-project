{"ast":null,"code":"var _jsxFileName = \"/home/screamoviolence/myDream/js/react-practise/my-first-app/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Profile from './components/Profile/Profile';\nimport Header from './components/Header/Header';\nimport Navbar from './components/NavBar/Navbar';\nimport Dialogs from './components/Dialogs/Dialogs';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass TimerControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hours: this.props.hours,\n      minutes: this.props.minutes,\n      sec: this.props.sec,\n      pause: \"false\"\n    };\n    this.pause = this.pause.bind(this);\n  }\n\n  secondsToTime(secs) {\n    let hoursCalc = Math.floor(secs / (60 * 60));\n    let divisor_for_minutes = secs % (60 * 60);\n    let minutesCalc = Math.floor(divisor_for_minutes / 60);\n    let divisor_for_seconds = divisor_for_minutes % 60;\n    let secondsCalc = Math.ceil(divisor_for_seconds);\n    this.setState({\n      hours: hoursCalc,\n      minutes: minutesCalc,\n      sec: secondsCalc\n    });\n  } //\n\n\n  hoursToTime(hours) {\n    let hoursCalc = hours;\n    let secondsCalc = Math.floor(hours * 3600);\n    let minutesCalc = Math.floor(hours * 60); //let divisor_for_seconds = divisor_for_minutes % 60;\n    // let divisor_for_minutes = hours % (60 * 60);\n    // let minutesCalc = Math.floor(divisor_for_minutes / 60);    \n    // let secondsCalc = Math.ceil(divisor_for_seconds);\n\n    this.setState({\n      hours: hoursCalc,\n      minutes: minutesCalc,\n      sec: secondsCalc\n    });\n  }\n\n  pause() {\n    let statePause = this.state.pause === \"true\" ? \"false\" : \"true\";\n    this.setState({\n      pause: statePause\n    });\n  }\n\n  tick() {\n    if (this.state.pause === \"false\") {\n      this.setState({\n        hours: this.state.hours,\n        minutes: this.state.minutes,\n        sec: this.secondsToTime(this.state.sec - 1)\n      });\n    } else {\n      this.setState({\n        hours: this.state.hours,\n        minutes: this.state.minutes,\n        sec: this.state.sec\n      });\n    }\n  }\n\n  componentDidMount() {\n    let timeLeftVar = this.secondsToTime(this.state.seconds);\n    this.setState({\n      time: timeLeftVar\n    });\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"h\",\n            value: this.props.hours,\n            onChange: e => {\n              this.setState({\n                hours: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"m\",\n            value: this.props.minutes,\n            onChange: e => {\n              this.setState({\n                minutes: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"s\",\n            value: this.props.sec,\n            onChange: e => {\n              this.setState({\n                sec: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Hrs: \", this.state.hours, \" min: \", this.state.minutes, \" sec: \", this.state.sec, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.pause,\n          children: \"pause/start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n} //Hrs: {this.state.time.h} min: {this.state.time.m} sec: {this.state.time.s}\n//{(this.state.sec === 0) ? this.componentWillUnmount() || \"0\" : this.state.sec}\n\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-wrapper-content\",\n        children: /*#__PURE__*/_jsxDEV(TimerControl, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/screamoviolence/myDream/js/react-practise/my-first-app/src/App.js"],"names":["React","Profile","Header","Navbar","Dialogs","News","Music","Settings","BrowserRouter","Route","TimerControl","Component","constructor","props","state","hours","minutes","sec","pause","bind","secondsToTime","secs","hoursCalc","Math","floor","divisor_for_minutes","minutesCalc","divisor_for_seconds","secondsCalc","ceil","setState","hoursToTime","statePause","tick","componentDidMount","timeLeftVar","seconds","time","timerID","setInterval","componentWillUnmount","clearInterval","render","e","target","value","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Profile from './components/Profile/Profile';\nimport Header from './components/Header/Header';\nimport Navbar from './components/NavBar/Navbar';\nimport Dialogs from './components/Dialogs/Dialogs';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\n\n\nclass TimerControl extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      hours: this.props.hours,\n      minutes: this.props.minutes,\n      sec: this.props.sec,\n\n      pause: \"false\"\n    }\n\n    this.pause = this.pause.bind(this);\n  }\n\n  secondsToTime(secs) {\n    let hoursCalc = Math.floor(secs / (60 * 60))\n\n    let divisor_for_minutes = secs % (60 * 60);\n    let minutesCalc = Math.floor(divisor_for_minutes / 60);\n\n    let divisor_for_seconds = divisor_for_minutes % 60;\n    let secondsCalc = Math.ceil(divisor_for_seconds);\n\n\n\n    this.setState({\n      hours: hoursCalc,\n      minutes: minutesCalc,\n      sec: secondsCalc,\n    });\n  }\n  //\n\n\n\n\n  hoursToTime(hours) {\n\n    let hoursCalc = hours\n    let secondsCalc = Math.floor(hours * 3600)\n    let minutesCalc = Math.floor(hours * 60)\n\n    //let divisor_for_seconds = divisor_for_minutes % 60;\n    // let divisor_for_minutes = hours % (60 * 60);\n    // let minutesCalc = Math.floor(divisor_for_minutes / 60);    \n    // let secondsCalc = Math.ceil(divisor_for_seconds);\n\n    this.setState({\n      hours: hoursCalc,\n      minutes: minutesCalc,\n      sec: secondsCalc,\n    });\n  }\n\n  pause() {\n    let statePause = (this.state.pause === \"true\") ? \"false\" : \"true\"\n    this.setState({\n      pause: statePause\n    });\n  }\n\n  tick() {\n    if (this.state.pause === \"false\") {\n      this.setState({\n        hours: this.state.hours,\n        minutes: this.state.minutes,\n        sec: this.secondsToTime(this.state.sec - 1),\n      });\n    } else {\n      this.setState({\n        hours: this.state.hours,\n        minutes: this.state.minutes,\n        sec: this.state.sec\n      });\n    }\n  }\n\n\n  componentDidMount() {\n    let timeLeftVar = this.secondsToTime(this.state.seconds);\n    this.setState({ time: timeLeftVar });\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    return (\n      <>\n        <div>\n        <form>\n          <input placeholder=\"h\" value={this.props.hours} onChange={(e) => {\n            this.setState({ hours: e.target.value }) }} />\n          <input placeholder=\"m\" value={this.props.minutes} onChange={(e) => {\n            this.setState({ minutes: e.target.value }) }} />\n          <input placeholder=\"s\" value={this.props.sec} onChange={(e) => {\n            this.setState({ sec: e.target.value }) }} />\n          </form>\n        </div>\n        <div>\n          Hrs: {this.state.hours} min: {this.state.minutes} sec: {this.state.sec}\n          <button onClick={this.pause}>pause/start</button>\n        </div>\n\n\n      </>\n    )\n  }\n}\n//Hrs: {this.state.time.h} min: {this.state.time.m} sec: {this.state.time.s}\n//{(this.state.sec === 0) ? this.componentWillUnmount() || \"0\" : this.state.sec}\n\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div className='app-wrapper'>\n\n        <Header />\n        <Navbar />\n        <div className='app-wrapper-content'>\n          <TimerControl />\n          {/* <Route path=\"/profile\" component={Profile} />\n          <Route path=\"/dialogs\" component={Dialogs} />\n          <Route path=\"/news\" component={News} />\n          <Route path=\"/music\" component={Music} />\n          <Route path=\"/settings\" component={Settings} /> */}\n        </div>\n      </div>\n    </BrowserRouter>)\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}