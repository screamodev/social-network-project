{"ast":null,"code":"var _jsxFileName = \"/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/Login/Login.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { login } from \"../../redux/authReducer\";\nimport { createField, Input } from \"../common/FormControls/FormsControls\";\nimport { maxLengthCreator, required } from \"../../utils/validators/index\";\nimport classes from \"../common/FormControls/FormControls.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst maxLength30 = maxLengthCreator(30);\n\nconst LoginForm = ({\n  handleSubmit,\n  error\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [createField(\"Email\", \"login\", [required], Input), createField(\"Password\", \"password\", [required], Input, {\n      type: \"password\"\n    }), createField(null, \"rememberMe\", [], Input, {\n      type: \"checkbox\"\n    }, \"remember me\"), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.formSummaryError,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LoginForm;\nconst LoginReduxForm = reduxForm({\n  // a unique name for the form\n  form: \"login\"\n})(LoginForm);\n\nconst Login = props => {\n  const onSubmit = formData => {\n    props.login(formData.login, formData.password, formData.rememberMe); //чрез санку\n  };\n\n  if (props.isLogin) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginReduxForm, {\n      onSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Login;\n\nconst mapStateToProps = state => ({\n  isLogin: state.auth.isLogin\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login); //санка\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"sources":["/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/Login/Login.jsx"],"names":["React","connect","Redirect","Field","reduxForm","login","createField","Input","maxLengthCreator","required","classes","maxLength30","LoginForm","handleSubmit","error","type","formSummaryError","LoginReduxForm","form","Login","props","onSubmit","formData","password","rememberMe","isLogin","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,KAAT,QAAsB,yBAAtB;AACA,SAASC,WAAT,EAAsBC,KAAtB,QAAmC,sCAAnC;AACA,SAASC,gBAAT,EAA2BC,QAA3B,QAA2C,8BAA3C;AAEA,OAAOC,OAAP,MAAoB,gDAApB;;AAEA,MAAMC,WAAW,GAAGH,gBAAgB,CAAC,EAAD,CAApC;;AAEA,MAAMI,SAAS,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAA6B;AAC7C,sBACE;AAAM,IAAA,QAAQ,EAAED,YAAhB;AAAA,eACGP,WAAW,CAAC,OAAD,EAAU,OAAV,EAAmB,CAACG,QAAD,CAAnB,EAA+BF,KAA/B,CADd,EAEGD,WAAW,CAAC,UAAD,EAAa,UAAb,EAAyB,CAACG,QAAD,CAAzB,EAAqCF,KAArC,EAA4C;AACtDQ,MAAAA,IAAI,EAAE;AADgD,KAA5C,CAFd,EAMGT,WAAW,CACV,IADU,EAEV,YAFU,EAGV,EAHU,EAIVC,KAJU,EAKV;AAAEQ,MAAAA,IAAI,EAAE;AAAR,KALU,EAMV,aANU,CANd,EAcGD,KAAK,iBAAI;AAAK,MAAA,SAAS,EAAEJ,OAAO,CAACM,gBAAxB;AAAA,gBAA2CF;AAA3C;AAAA;AAAA;AAAA;AAAA,YAdZ,eAeE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAvBD;;KAAMF,S;AAyBN,MAAMK,cAAc,GAAGb,SAAS,CAAC;AAC/B;AACAc,EAAAA,IAAI,EAAE;AAFyB,CAAD,CAAT,CAGpBN,SAHoB,CAAvB;;AAKA,MAAMO,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC7BF,IAAAA,KAAK,CAACf,KAAN,CAAYiB,QAAQ,CAACjB,KAArB,EAA4BiB,QAAQ,CAACC,QAArC,EAA+CD,QAAQ,CAACE,UAAxD,EAD6B,CACwC;AACtE,GAFD;;AAIA,MAAIJ,KAAK,CAACK,OAAV,EAAmB;AACjB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEJ;AAA1B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAfD;;MAAMF,K;;AAiBN,MAAMO,eAAe,GAAIC,KAAD,KAAY;AAClCF,EAAAA,OAAO,EAAEE,KAAK,CAACC,IAAN,CAAWH;AADc,CAAZ,CAAxB;;AAIA,eAAexB,OAAO,CAACyB,eAAD,EAAkB;AAAErB,EAAAA;AAAF,CAAlB,CAAP,CAAoCc,KAApC,CAAf,C,CAA2D","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { login } from \"../../redux/authReducer\";\nimport { createField, Input } from \"../common/FormControls/FormsControls\";\nimport { maxLengthCreator, required } from \"../../utils/validators/index\";\n\nimport classes from \"../common/FormControls/FormControls.module.css\";\n\nconst maxLength30 = maxLengthCreator(30);\n\nconst LoginForm = ({ handleSubmit, error }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      {createField(\"Email\", \"login\", [required], Input)}\n      {createField(\"Password\", \"password\", [required], Input, {\n        type: \"password\",\n      })}\n      {/* Божественный рефакторинг */}\n      {createField(\n        null,\n        \"rememberMe\",\n        [],\n        Input,\n        { type: \"checkbox\" },\n        \"remember me\"\n      )}\n      {error && <div className={classes.formSummaryError}>{error}</div>}\n      <div>\n        <button>Login</button>\n      </div>\n      \n    </form>\n  );\n};\n\nconst LoginReduxForm = reduxForm({\n  // a unique name for the form\n  form: \"login\",\n})(LoginForm);\n\nconst Login = (props) => {\n  const onSubmit = (formData) => {\n    props.login(formData.login, formData.password, formData.rememberMe); //чрез санку\n  };\n\n  if (props.isLogin) {\n    return <Redirect to={\"/profile\"} />;\n  }\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <LoginReduxForm onSubmit={onSubmit} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isLogin: state.auth.isLogin,\n});\n\nexport default connect(mapStateToProps, { login })(Login); //санка\n"]},"metadata":{},"sourceType":"module"}