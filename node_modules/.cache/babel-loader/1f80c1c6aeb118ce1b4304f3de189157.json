{"ast":null,"code":"var _jsxFileName = \"/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/Dialogs/Dialogs.jsx\";\nimport React from \"react\";\nimport classes from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport MessageItem from \"./MessageItem/MessageItem\";\nimport { Redirect } from \"react-router\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dialogs = props => {\n  let dialogsElements = props.dialogsData.map(dialog => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: dialog.name,\n    id: dialog.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this));\n  let messagesElements = props.messagesData.map(message => /*#__PURE__*/_jsxDEV(MessageItem, {\n    message: message.message,\n    id: message.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this));\n  let newMessageBody = props.newMessageBody;\n\n  let onSendMessageClick = () => {// props.store.dispatch(sendMessageCreator());\n  };\n\n  let onNewMessageChange = e => {\n    let body = e.target.value;\n    props.updateNewMessageBody(body); //props.store.dispatch(updateNewMessageBodyCreator(body));\n  };\n\n  let addNewMessage = formData => {\n    props.sendMessage(formData.newMessageBody);\n  };\n\n  if (!props.isLogin) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this); //Хуйня,как для функ компоненты\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.dialogsItems,\n      children: dialogsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.messages,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: messagesElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageFormRedux, {\n      onSubmit: addNewMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Dialogs;\n\nconst MessageForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        component: \"textarea\",\n        name: \"newMessageBody\",\n        placeholder: \"Enter your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = MessageForm;\nconst MessageFormRedux = reduxForm({\n  // a unique name for the form\n  form: \"message\"\n})(MessageForm);\nexport default Dialogs;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Dialogs\");\n$RefreshReg$(_c2, \"MessageForm\");","map":{"version":3,"sources":["/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/Dialogs/Dialogs.jsx"],"names":["React","classes","DialogItem","MessageItem","Redirect","Field","reduxForm","Dialogs","props","dialogsElements","dialogsData","map","dialog","name","id","messagesElements","messagesData","message","newMessageBody","onSendMessageClick","onNewMessageChange","e","body","target","value","updateNewMessageBody","addNewMessage","formData","sendMessage","isLogin","dialogs","dialogsItems","messages","MessageForm","handleSubmit","MessageFormRedux","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,MAAIC,eAAe,GAAGD,KAAK,CAACE,WAAN,CAAkBC,GAAlB,CAAuBC,MAAD,iBAC1C,QAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,MAAM,CAACC,IAAzB;AAA+B,IAAA,EAAE,EAAED,MAAM,CAACE;AAA1C;AAAA;AAAA;AAAA;AAAA,UADoB,CAAtB;AAGA,MAAIC,gBAAgB,GAAGP,KAAK,CAACQ,YAAN,CAAmBL,GAAnB,CAAwBM,OAAD,iBAC5C,QAAC,WAAD;AAAa,IAAA,OAAO,EAAEA,OAAO,CAACA,OAA9B;AAAuC,IAAA,EAAE,EAAEA,OAAO,CAACH;AAAnD;AAAA;AAAA;AAAA;AAAA,UADqB,CAAvB;AAIA,MAAII,cAAc,GAAGV,KAAK,CAACU,cAA3B;;AAEA,MAAIC,kBAAkB,GAAG,MAAM,CAC7B;AAED,GAHD;;AAKA,MAAIC,kBAAkB,GAAIC,CAAD,IAAO;AAC9B,QAAIC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAApB;AACAhB,IAAAA,KAAK,CAACiB,oBAAN,CAA2BH,IAA3B,EAF8B,CAG9B;AACD,GAJD;;AAMA,MAAII,aAAa,GAAIC,QAAD,IAAc;AAChCnB,IAAAA,KAAK,CAACoB,WAAN,CAAkBD,QAAQ,CAACT,cAA3B;AACD,GAFD;;AAIA,MAAI,CAACV,KAAK,CAACqB,OAAX,EAAoB;AAClB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP,CADkB,CACiB;AACpC;;AAED,sBACE;AAAK,IAAA,SAAS,EAAE5B,OAAO,CAAC6B,OAAxB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAE7B,OAAO,CAAC8B,YAAxB;AAAA,gBAAuCtB;AAAvC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAER,OAAO,CAAC+B,QAAxB;AAAA,6BACE;AAAA,kBAAMjB;AAAN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,gBAAD;AAAkB,MAAA,QAAQ,EAAEW;AAA5B;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAtCD;;KAAMnB,O;;AAwCN,MAAM0B,WAAW,GAAIzB,KAAD,IAAW;AAC7B,sBACE;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAAC0B,YAAtB;AAAA,4BACE;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,IAAI,EAAC,gBAFP;AAGE,QAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAfD;;MAAMD,W;AAiBN,MAAME,gBAAgB,GAAG7B,SAAS,CAAC;AACjC;AACA8B,EAAAA,IAAI,EAAE;AAF2B,CAAD,CAAT,CAGtBH,WAHsB,CAAzB;AAKA,eAAe1B,OAAf","sourcesContent":["import React from \"react\";\nimport classes from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport MessageItem from \"./MessageItem/MessageItem\";\nimport { Redirect } from \"react-router\";\nimport { Field, reduxForm } from \"redux-form\";\n\nconst Dialogs = (props) => {\n  let dialogsElements = props.dialogsData.map((dialog) => (\n    <DialogItem name={dialog.name} id={dialog.id} />\n  ));\n  let messagesElements = props.messagesData.map((message) => (\n    <MessageItem message={message.message} id={message.id} />\n  ));\n\n  let newMessageBody = props.newMessageBody;\n\n  let onSendMessageClick = () => {\n    // props.store.dispatch(sendMessageCreator());\n    \n  };\n\n  let onNewMessageChange = (e) => {\n    let body = e.target.value;\n    props.updateNewMessageBody(body);\n    //props.store.dispatch(updateNewMessageBodyCreator(body));\n  };\n\n  let addNewMessage = (formData) => {\n    props.sendMessage(formData.newMessageBody);\n  }\n\n  if (!props.isLogin) {\n    return <Redirect to={\"/login\"} />; //Хуйня,как для функ компоненты\n  }\n\n  return (\n    <div className={classes.dialogs}>\n      <div className={classes.dialogsItems}>{dialogsElements}</div>\n      <div className={classes.messages}>\n        <div>{messagesElements}</div>\n      </div>\n      <MessageFormRedux onSubmit={addNewMessage}/>\n    </div>\n  );\n};\n\nconst MessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          component=\"textarea\"\n          name=\"newMessageBody\"\n          placeholder=\"Enter your message...\"\n        />\n      </div>\n      <div>\n        <button>send</button>\n      </div>\n    </form>\n  );\n};\n\nconst MessageFormRedux = reduxForm({\n  // a unique name for the form\n  form: \"message\",\n})(MessageForm);\n\nexport default Dialogs;\n"]},"metadata":{},"sourceType":"module"}