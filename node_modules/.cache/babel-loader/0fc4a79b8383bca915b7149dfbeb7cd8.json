{"ast":null,"code":"const FOLLOW = \"FOLlOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET-USERS\";\nconst SET_CURRENT_PAGE = \"SET-CURRENT-PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"SET-TOTAL-USERS-COUNT\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\";\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\nlet initialState = {\n  usersData: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        usersData: state.usersData.map(user => {\n          if (user.id === action.userId) {\n            return { ...user,\n              followed: true\n            };\n          }\n\n          return user;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        usersData: state.usersData.map(user => {\n          if (user.id === action.userId) {\n            return { ...user,\n              followed: false\n            };\n          }\n\n          return user;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        usersData: action.usersData\n      };\n\n    case SET_CURRENT_PAGE:\n      return { ...state,\n        currentPage: action.currentPage\n      };\n\n    case SET_TOTAL_USERS_COUNT:\n      return { ...state,\n        totalUsersCount: action.count\n      };\n\n    case TOGGLE_IS_FETCHING:\n      return { ...state,\n        isFetching: action.isFetching\n      };\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return { ...state,\n        followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : [...state.followingInProgress.filter(id => id != action.userId)]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const follow = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollow = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsers = usersData => ({\n  type: SET_USERS,\n  usersData\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCount = count => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleFollowingProgress = isFetching => ({\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\n  isFetching\n});\nexport default usersReducer;","map":{"version":3,"sources":["/home/screamoviolence/myDream/js/react-practise/my-first-app/src/redux/usersReducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","usersData","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","map","user","id","userId","followed","count","filter","follow","unfollow","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,qBAAqB,GAAG,uBAA9B;AAEA,MAAMC,kBAAkB,GAAG,oBAA3B;AACA,MAAMC,4BAA4B,GAAG,8BAArC;AAGA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,QAAQ,EAAE,CAFO;AAGjBC,EAAAA,eAAe,EAAE,CAHA;AAIjBC,EAAAA,WAAW,EAAE,CAJI;AAKjBC,EAAAA,UAAU,EAAE,IALK;AAMjBC,EAAAA,mBAAmB,EAAE;AANJ,CAAnB;;AASA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKjB,MAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELP,QAAAA,SAAS,EAAEO,KAAK,CAACP,SAAN,CAAgBU,GAAhB,CAAqBC,IAAD,IAAU;AACvC,cAAIA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACK,MAAvB,EAA+B;AAC7B,mBAAO,EAAE,GAAGF,IAAL;AAAWG,cAAAA,QAAQ,EAAE;AAArB,aAAP;AACD;;AACD,iBAAOH,IAAP;AACD,SALU;AAFN,OAAP;;AAUF,SAAKlB,QAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELP,QAAAA,SAAS,EAAEO,KAAK,CAACP,SAAN,CAAgBU,GAAhB,CAAqBC,IAAD,IAAU;AACvC,cAAIA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACK,MAAvB,EAA+B;AAC7B,mBAAO,EAAE,GAAGF,IAAL;AAAWG,cAAAA,QAAQ,EAAE;AAArB,aAAP;AACD;;AACD,iBAAOH,IAAP;AACD,SALU;AAFN,OAAP;;AAUF,SAAKjB,SAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELP,QAAAA,SAAS,EAAEQ,MAAM,CAACR;AAFb,OAAP;;AAIF,SAAKL,gBAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELJ,QAAAA,WAAW,EAAEK,MAAM,CAACL;AAFf,OAAP;;AAIF,SAAKP,qBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELL,QAAAA,eAAe,EAAEM,MAAM,CAACO;AAFnB,OAAP;;AAIF,SAAKlB,kBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELH,QAAAA,UAAU,EAAEI,MAAM,CAACJ;AAFd,OAAP;;AAIA,SAAKN,4BAAL;AACA,aAAO,EACL,GAAGS,KADE;AAELF,QAAAA,mBAAmB,EAAEG,MAAM,CAACJ,UAAP,GAClB,CAAC,GAAGG,KAAK,CAACF,mBAAV,EAA+BG,MAAM,CAACK,MAAtC,CADkB,GAEnB,CAAC,GAAGN,KAAK,CAACF,mBAAN,CAA0BW,MAA1B,CAAiCJ,EAAE,IAAIA,EAAE,IAAIJ,MAAM,CAACK,MAApD,CAAJ;AAJG,OAAP;;AAMF;AACE,aAAON,KAAP;AAnDJ;AAqDD,CAtDD;;AAwDA,OAAO,MAAMU,MAAM,GAAIJ,MAAD,KAAa;AAAEJ,EAAAA,IAAI,EAAEjB,MAAR;AAAgBqB,EAAAA;AAAhB,CAAb,CAAf;AACP,OAAO,MAAMK,QAAQ,GAAIL,MAAD,KAAa;AAAEJ,EAAAA,IAAI,EAAEhB,QAAR;AAAkBoB,EAAAA;AAAlB,CAAb,CAAjB;AACP,OAAO,MAAMM,QAAQ,GAAInB,SAAD,KAAgB;AAAES,EAAAA,IAAI,EAAEf,SAAR;AAAmBM,EAAAA;AAAnB,CAAhB,CAAjB;AACP,OAAO,MAAMoB,cAAc,GAAIjB,WAAD,KAAkB;AAC9CM,EAAAA,IAAI,EAAEd,gBADwC;AAE9CQ,EAAAA;AAF8C,CAAlB,CAAvB;AAIP,OAAO,MAAMkB,kBAAkB,GAAIN,KAAD,KAAY;AAC5CN,EAAAA,IAAI,EAAEb,qBADsC;AAE5CmB,EAAAA;AAF4C,CAAZ,CAA3B;AAIP,OAAO,MAAMO,gBAAgB,GAAIlB,UAAD,KAAiB;AAAEK,EAAAA,IAAI,EAAEZ,kBAAR;AAA4BO,EAAAA;AAA5B,CAAjB,CAAzB;AACP,OAAO,MAAMmB,uBAAuB,GAAInB,UAAD,KAAiB;AAAEK,EAAAA,IAAI,EAAEX,4BAAR;AAAsCM,EAAAA;AAAtC,CAAjB,CAAhC;AAIP,eAAeE,YAAf","sourcesContent":["const FOLLOW = \"FOLlOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET-USERS\";\nconst SET_CURRENT_PAGE = \"SET-CURRENT-PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"SET-TOTAL-USERS-COUNT\";\n\nconst TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\";\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\n\n\nlet initialState = {\n  usersData: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: [],\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        usersData: state.usersData.map((user) => {\n          if (user.id === action.userId) {\n            return { ...user, followed: true };\n          }\n          return user;\n        }),\n      };\n\n    case UNFOLLOW:\n      return {\n        ...state,\n        usersData: state.usersData.map((user) => {\n          if (user.id === action.userId) {\n            return { ...user, followed: false };\n          }\n          return user;\n        }),\n      };\n\n    case SET_USERS:\n      return {\n        ...state,\n        usersData: action.usersData,\n      };\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.currentPage,\n      };\n    case SET_TOTAL_USERS_COUNT:\n      return {\n        ...state,\n        totalUsersCount: action.count,\n      };\n    case TOGGLE_IS_FETCHING:\n      return {\n        ...state,\n        isFetching: action.isFetching,\n      };\n      case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return {\n        ...state,\n        followingInProgress: action.isFetching \n        ?  [...state.followingInProgress, action.userId]\n        : [...state.followingInProgress.filter(id => id != action.userId)]\n      };\n    default:\n      return state;\n  }\n};\n\nexport const follow = (userId) => ({ type: FOLLOW, userId });\nexport const unfollow = (userId) => ({ type: UNFOLLOW, userId });\nexport const setUsers = (usersData) => ({ type: SET_USERS, usersData });\nexport const setCurrentPage = (currentPage) => ({\n  type: SET_CURRENT_PAGE,\n  currentPage,\n});\nexport const setTotalUsersCount = (count) => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count,\n});\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\nexport const toggleFollowingProgress = (isFetching) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching });\n\n\n\nexport default usersReducer;\n"]},"metadata":{},"sourceType":"module"}