{"ast":null,"code":"import { updateNewMessageBodyCreator, sendMessageCreator } from \"../../redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToProps = state => {\n  return {\n    dialogsData: state.dialogsPage.dialogsData // messagesData: state.dialogsPage.messagesData,\n    // newMessageBody: state.dialogsPage.newMessageBody,\n\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    updateNewMessageBody: body => {\n      dispatch(updateNewMessageBodyCreator(body));\n    },\n    sendMessage: () => {\n      dispatch(sendMessageCreator());\n    }\n  };\n};\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\nexport default DialogsContainer;","map":{"version":3,"sources":["/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/Dialogs/DialogsContainer.jsx"],"names":["updateNewMessageBodyCreator","sendMessageCreator","Dialogs","connect","mapStateToProps","state","dialogsData","dialogsPage","mapDispatchToProps","dispatch","updateNewMessageBody","body","sendMessage","DialogsContainer"],"mappings":"AAAA,SACEA,2BADF,EAEEC,kBAFF,QAGO,4BAHP;AAIA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACE,WAAN,CAAkBD,WAD1B,CAEL;AACA;;AAHK,GAAP;AAKD,CAND;;AAQA,IAAIE,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACLC,IAAAA,oBAAoB,EAAGC,IAAD,IAAU;AAC9BF,MAAAA,QAAQ,CAACT,2BAA2B,CAACW,IAAD,CAA5B,CAAR;AACD,KAHI;AAILC,IAAAA,WAAW,EAAE,MAAM;AACjBH,MAAAA,QAAQ,CAACR,kBAAkB,EAAnB,CAAR;AACD;AANI,GAAP;AAQD,CATD;;AAWA,MAAMY,gBAAgB,GAAGV,OAAO,CAACC,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CN,OAA7C,CAAzB;AAEA,eAAeW,gBAAf","sourcesContent":["import {\n  updateNewMessageBodyCreator,\n  sendMessageCreator,\n} from \"../../redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsData: state.dialogsPage.dialogsData,\n    // messagesData: state.dialogsPage.messagesData,\n    // newMessageBody: state.dialogsPage.newMessageBody,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    updateNewMessageBody: (body) => {\n      dispatch(updateNewMessageBodyCreator(body));\n    },\n    sendMessage: () => {\n      dispatch(sendMessageCreator());\n    },\n  };\n};\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\n\nexport default DialogsContainer;\n"]},"metadata":{},"sourceType":"module"}