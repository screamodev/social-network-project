{"ast":null,"code":"var _jsxFileName = \"/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/Users/UsersContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { follow, setCurrentPage, unfollow, toggleFollowingProgress, getUsers } from \"../../redux/usersReducer\";\nimport Users from \"./Users.jsx\";\nimport PreLoader from \"../common/preLoader/preLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.getUsers(pageNumber, this.props.pageSize);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(PreLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 34\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, { ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    usersData: state.usersPage.usersData,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n    followingInProgress: state.usersPage.followingInProgress\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setCurrentPage,\n  toggleFollowingProgress,\n  getUsers\n})(UsersContainer); //connect из экнон криейтора сам создает колбек и который внутри задиспатчит то, что вернет экшон криейтор,","map":{"version":3,"sources":["/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/Users/UsersContainer.jsx"],"names":["React","connect","follow","setCurrentPage","unfollow","toggleFollowingProgress","getUsers","Users","PreLoader","UsersContainer","Component","onPageChanged","pageNumber","props","pageSize","componentDidMount","currentPage","render","isFetching","mapStateToProps","state","usersData","usersPage","totalUsersCount","followingInProgress"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,MADF,EAEEC,cAFF,EAGEC,QAHF,EAIEC,uBAJF,EAKEC,QALF,QAMO,0BANP;AAOA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;;;;AAEA,MAAMC,cAAN,SAA6BT,KAAK,CAACU,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAK3CC,aAL2C,GAK1BC,UAAD,IAAgB;AAC9B,WAAKC,KAAL,CAAWP,QAAX,CAAoBM,UAApB,EAAgC,KAAKC,KAAL,CAAWC,QAA3C;AACD,KAP0C;AAAA;;AAC3CC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,KAAL,CAAWP,QAAX,CAAoB,KAAKO,KAAL,CAAWG,WAA/B,EAA4C,KAAKH,KAAL,CAAWC,QAAvD;AACD;;AAMDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,iBACG,KAAKJ,KAAL,CAAWK,UAAX,gBAAwB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAxB,GAAwC,IAD3C,eAEE,QAAC,KAAD,OACK,KAAKL;AADV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAQD;;AAlB0C;;AAqB7C,IAAIM,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACLC,IAAAA,SAAS,EAAED,KAAK,CAACE,SAAN,CAAgBD,SADtB;AAELP,IAAAA,QAAQ,EAAEM,KAAK,CAACE,SAAN,CAAgBR,QAFrB;AAGLS,IAAAA,eAAe,EAAEH,KAAK,CAACE,SAAN,CAAgBC,eAH5B;AAILP,IAAAA,WAAW,EAAEI,KAAK,CAACE,SAAN,CAAgBN,WAJxB;AAKLE,IAAAA,UAAU,EAAEE,KAAK,CAACE,SAAN,CAAgBJ,UALvB;AAMLM,IAAAA,mBAAmB,EAAEJ,KAAK,CAACE,SAAN,CAAgBE;AANhC,GAAP;AAQD,CATD;;AAWA,eAAevB,OAAO,CAACkB,eAAD,EAAkB;AACtCjB,EAAAA,MADsC;AAEtCE,EAAAA,QAFsC;AAGtCD,EAAAA,cAHsC;AAItCE,EAAAA,uBAJsC;AAKtCC,EAAAA;AALsC,CAAlB,CAAP,CAMZG,cANY,CAAf,C,CAMoB","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  follow,\n  setCurrentPage,\n  unfollow,\n  toggleFollowingProgress,\n  getUsers,\n} from \"../../redux/usersReducer\";\nimport Users from \"./Users.jsx\";\nimport PreLoader from \"../common/preLoader/preLoader\";\n\nclass UsersContainer extends React.Component {\n  componentDidMount() {\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\n  }\n\n  onPageChanged = (pageNumber) => {\n    this.props.getUsers(pageNumber, this.props.pageSize);\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.isFetching ? <PreLoader /> : null}\n        <Users\n         {...this.props}\n        />\n      </>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    usersData: state.usersPage.usersData,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n    followingInProgress: state.usersPage.followingInProgress,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setCurrentPage,\n  toggleFollowingProgress,\n  getUsers,\n})(UsersContainer); //connect из экнон криейтора сам создает колбек и который внутри задиспатчит то, что вернет экшон криейтор,\n"]},"metadata":{},"sourceType":"module"}