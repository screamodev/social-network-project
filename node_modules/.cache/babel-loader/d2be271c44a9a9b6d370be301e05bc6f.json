{"ast":null,"code":"var _jsxFileName = \"/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/Login/Login.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { login } from \"../../redux/authReducer\";\nimport { Input } from \"../common/FormControls/FormsControls\";\nimport { maxLengthCreator, required } from \"../../utils/validators/index\";\nimport classes from \"../common/FormControls/FormControls.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst maxLength30 = maxLengthCreator(30);\n\nconst LoginForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        placeholder: \"Login\",\n        validate: [required, maxLength30],\n        name: \"login\",\n        component: Input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        placeholder: \"Password\",\n        validate: [required, maxLength30],\n        type: \"password\",\n        name: \"password\",\n        component: Input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        type: \"checkbox\",\n        name: \"rememberMe\",\n        component: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), \"remember me\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), props.error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.formSummaryError,\n      children: props.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LoginForm;\nconst LoginReduxForm = reduxForm({\n  // a unique name for the form\n  form: \"login\"\n})(LoginForm);\n\nconst Login = props => {\n  const onSubmit = formData => {\n    props.login(formData.login, formData.password, formData.rememberMe); //чрез санку\n  };\n\n  if (props.isLogin) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginReduxForm, {\n      onSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Login;\n\nconst mapStateToProps = state => ({\n  isLogin: state.auth.isLogin\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login); //санка\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"sources":["/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/Login/Login.jsx"],"names":["React","connect","Redirect","Field","reduxForm","login","Input","maxLengthCreator","required","classes","maxLength30","LoginForm","props","handleSubmit","error","formSummaryError","LoginReduxForm","form","Login","onSubmit","formData","password","rememberMe","isLogin","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,KAAT,QAAsB,yBAAtB;AACA,SAASC,KAAT,QAAsB,sCAAtB;AACA,SAASC,gBAAT,EAA2BC,QAA3B,QAA2C,8BAA3C;AAEA,OAAOC,OAAP,MAAoB,gDAApB;;AAEA,MAAMC,WAAW,GAAGH,gBAAgB,CAAC,EAAD,CAApC;;AAEA,MAAMI,SAAS,GAAIC,KAAD,IAAW;AAC3B,sBACE;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACC,YAAtB;AAAA,4BACE;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,WAAW,EAAE,OADf;AAEE,QAAA,QAAQ,EAAE,CAACL,QAAD,EAAWE,WAAX,CAFZ;AAGE,QAAA,IAAI,EAAE,OAHR;AAIE,QAAA,SAAS,EAAEJ;AAJb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,WAAW,EAAE,UADf;AAEE,QAAA,QAAQ,EAAE,CAACE,QAAD,EAAWE,WAAX,CAFZ;AAGE,QAAA,IAAI,EAAE,UAHR;AAIE,QAAA,IAAI,EAAE,UAJR;AAKE,QAAA,SAAS,EAAEJ;AALb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF,eAkBE;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE,UAAb;AAAyB,QAAA,IAAI,EAAE,YAA/B;AAA6C,QAAA,SAAS,EAAE;AAAxD;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF,eAuBE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAvBF,EA0BIM,KAAK,CAACE,KAAN,iBAAe;AAAK,MAAA,SAAS,EAAEL,OAAO,CAACM,gBAAxB;AAAA,gBAA2CH,KAAK,CAACE;AAAjD;AAAA;AAAA;AAAA;AAAA,YA1BnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CA/BD;;KAAMH,S;AAiCN,MAAMK,cAAc,GAAGZ,SAAS,CAAC;AAC/B;AACAa,EAAAA,IAAI,EAAE;AAFyB,CAAD,CAAT,CAGpBN,SAHoB,CAAvB;;AAKA,MAAMO,KAAK,GAAIN,KAAD,IAAW;AACvB,QAAMO,QAAQ,GAAIC,QAAD,IAAc;AAC7BR,IAAAA,KAAK,CAACP,KAAN,CAAYe,QAAQ,CAACf,KAArB,EAA4Be,QAAQ,CAACC,QAArC,EAA+CD,QAAQ,CAACE,UAAxD,EAD6B,CACwC;AACtE,GAFD;;AAIA,MAAIV,KAAK,CAACW,OAAV,EAAmB;AACjB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEJ;AAA1B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAfD;;MAAMD,K;;AAiBN,MAAMM,eAAe,GAAIC,KAAD,KAAY;AAClCF,EAAAA,OAAO,EAAEE,KAAK,CAACC,IAAN,CAAWH;AADc,CAAZ,CAAxB;;AAIA,eAAetB,OAAO,CAACuB,eAAD,EAAkB;AAAEnB,EAAAA;AAAF,CAAlB,CAAP,CAAoCa,KAApC,CAAf,C,CAA2D","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { login } from \"../../redux/authReducer\";\nimport { Input } from \"../common/FormControls/FormsControls\";\nimport { maxLengthCreator, required } from \"../../utils/validators/index\";\n\nimport classes from \"../common/FormControls/FormControls.module.css\";\n\nconst maxLength30 = maxLengthCreator(30);\n\nconst LoginForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          placeholder={\"Login\"}\n          validate={[required, maxLength30]}\n          name={\"login\"}\n          component={Input}\n        />\n      </div>\n      <div>\n        <Field\n          placeholder={\"Password\"}\n          validate={[required, maxLength30]}\n          type={\"password\"}\n          name={\"password\"}\n          component={Input}\n        />\n      </div>\n      <div>\n        <Field type={\"checkbox\"} name={\"rememberMe\"} component={\"input\"} />\n        remember me\n      </div>\n    \n      <div>\n        <button>Login</button>\n      </div>\n      { props.error && <div className={classes.formSummaryError}>{props.error}</div>}\n    </form>\n  );\n};\n\nconst LoginReduxForm = reduxForm({\n  // a unique name for the form\n  form: \"login\",\n})(LoginForm);\n\nconst Login = (props) => {\n  const onSubmit = (formData) => {\n    props.login(formData.login, formData.password, formData.rememberMe); //чрез санку\n  };\n\n  if (props.isLogin) {\n    return <Redirect to={\"/profile\"} />;\n  }\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <LoginReduxForm onSubmit={onSubmit} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isLogin: state.auth.isLogin,\n});\n\nexport default connect(mapStateToProps, { login })(Login); //санка\n"]},"metadata":{},"sourceType":"module"}