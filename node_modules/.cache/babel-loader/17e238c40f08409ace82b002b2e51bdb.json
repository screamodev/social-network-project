{"ast":null,"code":"import { profileAPI } from \"../components/api/api\";\nconst ADD_POST = \"ADD-POST\";\nconst ADD_UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\nconst SET_USER_PROFILE = \"SET-USER-PROFILE\";\nconst SET_USER_STATUS = \"SET-USER-STATUS\";\nlet initialState = {\n  postsData: [{\n    id: 1,\n    message: \"Hi, i am john\",\n    likesCount: 12\n  }, {\n    id: 2,\n    message: \"welcome\",\n    likesCount: 18\n  }],\n  newPostText: \"\",\n  profile: null,\n  status: \"\"\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: state.postsData.length + 1,\n          message: state.newPostText,\n          likesCount: 0\n        };\n        return { ...state,\n          postsData: [...state.postsData, newPost],\n          newPostText: \"\"\n        };\n      }\n\n    case ADD_UPDATE_NEW_POST_TEXT:\n      {\n        return { ...state,\n          newPostText: action.newText\n        };\n      }\n\n    case SET_USER_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const onPostChangeActionCreator = text => ({\n  type: ADD_UPDATE_NEW_POST_TEXT,\n  newText: text\n});\nexport const setUserStatus = status => ({\n  type: SET_USER_STATUS,\n  status\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const getUserStatus = userId => dispatch => {\n  profileAPI.getUserStatus(userId).then(response => {\n    dispatch(setUserStatus(response.data));\n  });\n};\nexport const getUserProfile = userId => dispatch => {\n  profileAPI.getUserProfile(userId).then(data => {\n    dispatch(setUserProfile(data));\n  });\n};\nexport const updateUserStatus = status => dispatch => {\n  profileAPI.updateUserStatus(status).then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(setUserStatus(status));\n    }\n  });\n};\nexport default profileReducer;","map":{"version":3,"sources":["/home/screamoviolence/myDream/js/react-practise/my-first-app/src/redux/profileReducer.js"],"names":["profileAPI","ADD_POST","ADD_UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_USER_STATUS","initialState","postsData","id","message","likesCount","newPostText","profile","status","profileReducer","state","action","type","newPost","length","newText","addPostActionCreator","onPostChangeActionCreator","text","setUserStatus","setUserProfile","getUserStatus","userId","dispatch","then","response","data","getUserProfile","updateUserStatus","resultCode"],"mappings":"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","sourcesContent":["import { profileAPI } from \"../components/api/api\";\n\nconst ADD_POST = \"ADD-POST\";\nconst ADD_UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\nconst SET_USER_PROFILE = \"SET-USER-PROFILE\";\nconst SET_USER_STATUS = \"SET-USER-STATUS\";\n\nlet initialState = {\n  postsData: [\n    { id: 1, message: \"Hi, i am john\", likesCount: 12 },\n    { id: 2, message: \"welcome\", likesCount: 18 },\n  ],\n  newPostText: \"\",\n  profile: null,\n  status: \"\",\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST: {\n      let newPost = {\n        id: state.postsData.length + 1,\n        message: state.newPostText,\n        likesCount: 0,\n      };\n      return {\n        ...state,\n        postsData: [...state.postsData, newPost],\n        newPostText: \"\",\n      };\n    }\n    case ADD_UPDATE_NEW_POST_TEXT: {\n      return {\n        ...state,\n        newPostText: action.newText,\n      };\n    }\n    case SET_USER_STATUS: {\n      return {\n        ...state,\n        status: action.status,\n      };\n    }\n    case SET_USER_PROFILE: {\n      return {\n        ...state,\n        profile: action.profile,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = () => ({ type: ADD_POST });\nexport const onPostChangeActionCreator = (text) => ({\n  type: ADD_UPDATE_NEW_POST_TEXT,\n  newText: text,\n});\nexport const setUserStatus = (status) => ({ type: SET_USER_STATUS, status });\nexport const setUserProfile = (profile) => ({\n  type: SET_USER_PROFILE,\n  profile,\n});\n\nexport const getUserStatus = (userId) => (dispatch) => {\n  profileAPI.getUserStatus(userId).then((response) => {\n    dispatch(setUserStatus(response.data));\n  });\n};\nexport const getUserProfile = (userId) => (dispatch) => {\n  profileAPI.getUserProfile(userId).then((data) => {\n    dispatch(setUserProfile(data));\n  });\n};\n\nexport const updateUserStatus = (status) => (dispatch) => {\n  profileAPI.updateUserStatus(status).then((response) => {\n    if(response.data.resultCode === 0) {\n      dispatch(setUserStatus(status));\n    }\n\n  } \n  )\n}\n\nexport default profileReducer;\n"]},"metadata":{},"sourceType":"module"}