{"ast":null,"code":"var _jsxFileName = \"/home/screamoviolence/myDream/js/react-practise/my-first-app/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Profile from './components/Profile/Profile';\nimport Header from './components/Header/Header';\nimport Navbar from './components/NavBar/Navbar';\nimport Dialogs from './components/Dialogs/Dialogs';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: {},\n      sec: this.props.sec,\n      pause: \"false\"\n    };\n    this.pause = this.pause.bind(this);\n  }\n\n  secondsToTime(secs) {\n    let hours = Math.floor(secs / (60 * 60));\n    let divisor_for_minutes = secs % (60 * 60);\n    let minutes = Math.floor(divisor_for_minutes / 60);\n    let divisor_for_seconds = divisor_for_minutes % 60;\n    let seconds = Math.ceil(divisor_for_seconds);\n    let obj = {\n      \"h\": hours,\n      \"m\": minutes,\n      \"s\": seconds\n    };\n    return obj;\n  }\n\n  pause() {\n    let statePause = this.state.pause === \"true\" ? \"false\" : \"true\";\n    this.setState({\n      pause: statePause\n    });\n  }\n\n  tick() {\n    if (this.state.pause === \"false\") {\n      this.setState({\n        sec: this.state.sec - 1,\n        time: this.secondsToTime(this.state.sec - 1)\n      });\n    } else {\n      this.setState({\n        sec: this.state.sec,\n        time: this.secondsToTime(this.state.sec)\n      });\n    }\n  }\n\n  componentDidMount() {\n    let timeLeftVar = this.secondsToTime(this.state.seconds);\n    this.setState({\n      time: timeLeftVar\n    });\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.sec === 0 ? this.componentWillUnmount() || \"0\" : this.state.sec\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.pause,\n        children: \"pause/start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-wrapper-content\",\n        children: /*#__PURE__*/_jsxDEV(Timer, {\n          sec: 10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/screamoviolence/myDream/js/react-practise/my-first-app/src/App.js"],"names":["React","Profile","Header","Navbar","Dialogs","News","Music","Settings","BrowserRouter","Route","Timer","Component","constructor","props","state","time","sec","pause","bind","secondsToTime","secs","hours","Math","floor","divisor_for_minutes","minutes","divisor_for_seconds","seconds","ceil","obj","statePause","setState","tick","componentDidMount","timeLeftVar","timerID","setInterval","componentWillUnmount","clearInterval","render","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Profile from './components/Profile/Profile';\nimport Header from './components/Header/Header';\nimport Navbar from './components/NavBar/Navbar';\nimport Dialogs from './components/Dialogs/Dialogs';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\n\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      time: {},\n      sec: this.props.sec,\n      pause: \"false\"\n    }\n\n    this.pause = this.pause.bind(this);\n  }\n\n  secondsToTime(secs) {\n    let hours = Math.floor(secs / (60 * 60))\n\n    let divisor_for_minutes = secs % (60 * 60);\n    let minutes = Math.floor(divisor_for_minutes / 60);\n\n    let divisor_for_seconds = divisor_for_minutes % 60;\n    let seconds = Math.ceil(divisor_for_seconds);\n\n    let obj = {\n      \"h\": hours,\n      \"m\": minutes,\n      \"s\": seconds\n    };\n    return obj;\n\n  }\n\n  pause() {\n    let statePause = (this.state.pause === \"true\") ? \"false\" : \"true\"\n    this.setState({\n      pause: statePause\n    });\n  }\n\n  tick() {\n    if (this.state.pause === \"false\") {\n      this.setState({ \n        sec: this.state.sec - 1,\n        time: this.secondsToTime(this.state.sec - 1)\n      });\n    } else {\n      this.setState({ \n        sec: this.state.sec,\n        time: this.secondsToTime(this.state.sec)\n      });\n    }\n  }\n\n\n  componentDidMount() {\n    let timeLeftVar = this.secondsToTime(this.state.seconds);\n    this.setState({ time: timeLeftVar });\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n    \n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    return (\n      <>\n        <div>{(this.state.sec === 0) ? this.componentWillUnmount() || \"0\" : this.state.sec}</div>\n        <button onClick={this.pause}>pause/start</button>\n      </>\n    )\n  }\n}\n\n\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div className='app-wrapper'>\n\n        <Header />\n        <Navbar />\n        <div className='app-wrapper-content'>\n          <Timer sec={10} />\n          {/* <Route path=\"/profile\" component={Profile} />\n          <Route path=\"/dialogs\" component={Dialogs} />\n          <Route path=\"/news\" component={News} />\n          <Route path=\"/music\" component={Music} />\n          <Route path=\"/settings\" component={Settings} /> */}\n        </div>\n      </div>\n    </BrowserRouter>)\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}