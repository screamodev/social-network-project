{"ast":null,"code":"var _jsxFileName = \"/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/Dialogs/Dialogs.jsx\";\nimport React from \"react\";\nimport classes from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport MessageItem from \"./MessageItem/MessageItem\";\nimport { updateNewMessageBodyCreator, sendMessageCreator } from \"../../redux/dialogsReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dialogs = props => {\n  let state = props.store.getState().dialogsPage;\n  let dialogsElements = state.dialogsData.map(dialog => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: dialog.name,\n    id: dialog.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this));\n  let messagesElements = state.messagesData.map(message => /*#__PURE__*/_jsxDEV(MessageItem, {\n    message: message.message,\n    id: message.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this));\n  let newMessageBody = state.newMessageBody;\n\n  let onSendMessageClick = () => {\n    // props.store.dispatch(sendMessageCreator());\n    props.sendMessage();\n  };\n\n  let onNewMessageChange = e => {\n    let body = e.target.value;\n    props.updateNewMessageBody(body); //props.store.dispatch(updateNewMessageBodyCreator(body));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.dialogs,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.dialogsItems,\n        children: dialogsElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.messages,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: messagesElements\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: newMessageBody,\n              onChange: onNewMessageChange,\n              placeholder: \"Enter ypur message...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: onSendMessageClick,\n              children: \"send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Dialogs;\nexport default Dialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"sources":["/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/Dialogs/Dialogs.jsx"],"names":["React","classes","DialogItem","MessageItem","updateNewMessageBodyCreator","sendMessageCreator","Dialogs","props","state","store","getState","dialogsPage","dialogsElements","dialogsData","map","dialog","name","id","messagesElements","messagesData","message","newMessageBody","onSendMessageClick","sendMessage","onNewMessageChange","e","body","target","value","updateNewMessageBody","dialogs","dialogsItems","messages"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SACEC,2BADF,EAEEC,kBAFF,QAGO,4BAHP;;;AAKA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,MAAIC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAYC,QAAZ,GAAuBC,WAAnC;AAEA,MAAIC,eAAe,GAAGJ,KAAK,CAACK,WAAN,CAAkBC,GAAlB,CAAuBC,MAAD,iBAC1C,QAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,MAAM,CAACC,IAAzB;AAA+B,IAAA,EAAE,EAAED,MAAM,CAACE;AAA1C;AAAA;AAAA;AAAA;AAAA,UADoB,CAAtB;AAGA,MAAIC,gBAAgB,GAAGV,KAAK,CAACW,YAAN,CAAmBL,GAAnB,CAAwBM,OAAD,iBAC5C,QAAC,WAAD;AAAa,IAAA,OAAO,EAAEA,OAAO,CAACA,OAA9B;AAAuC,IAAA,EAAE,EAAEA,OAAO,CAACH;AAAnD;AAAA;AAAA;AAAA;AAAA,UADqB,CAAvB;AAIA,MAAII,cAAc,GAAGb,KAAK,CAACa,cAA3B;;AAEA,MAAIC,kBAAkB,GAAG,MAAM;AAC7B;AACAf,IAAAA,KAAK,CAACgB,WAAN;AACD,GAHD;;AAKA,MAAIC,kBAAkB,GAAIC,CAAD,IAAO;AAC9B,QAAIC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAApB;AACArB,IAAAA,KAAK,CAACsB,oBAAN,CAA2BH,IAA3B,EAF8B,CAG9B;AACD,GAJD;;AAMA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEzB,OAAO,CAAC6B,OAAxB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAE7B,OAAO,CAAC8B,YAAxB;AAAA,kBAAuCnB;AAAvC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAEX,OAAO,CAAC+B,QAAxB;AAAA,gCACE;AAAA,oBAAMd;AAAN;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,kCACE;AAAA,mCACE;AACE,cAAA,KAAK,EAAEG,cADT;AAEE,cAAA,QAAQ,EAAEG,kBAFZ;AAGE,cAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAA,mCACE;AAAQ,cAAA,OAAO,EAAEF,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA7CD;;KAAMhB,O;AA+CN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport classes from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport MessageItem from \"./MessageItem/MessageItem\";\nimport {\n  updateNewMessageBodyCreator,\n  sendMessageCreator,\n} from \"../../redux/dialogsReducer\";\n\nconst Dialogs = (props) => {\n  let state = props.store.getState().dialogsPage;\n\n  let dialogsElements = state.dialogsData.map((dialog) => (\n    <DialogItem name={dialog.name} id={dialog.id} />\n  ));\n  let messagesElements = state.messagesData.map((message) => (\n    <MessageItem message={message.message} id={message.id} />\n  ));\n\n  let newMessageBody = state.newMessageBody;\n\n  let onSendMessageClick = () => {\n    // props.store.dispatch(sendMessageCreator());\n    props.sendMessage();\n  };\n\n  let onNewMessageChange = (e) => {\n    let body = e.target.value;\n    props.updateNewMessageBody(body);\n    //props.store.dispatch(updateNewMessageBodyCreator(body));\n  };\n\n  return (\n    <div>\n      <div className={classes.dialogs}>\n        <div className={classes.dialogsItems}>{dialogsElements}</div>\n        <div className={classes.messages}>\n          <div>{messagesElements}</div>\n          <div>\n            <div>\n              <textarea\n                value={newMessageBody}\n                onChange={onNewMessageChange}\n                placeholder=\"Enter ypur message...\"\n              ></textarea>\n            </div>\n            <div>\n              <button onClick={onSendMessageClick}>send</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dialogs;\n"]},"metadata":{},"sourceType":"module"}