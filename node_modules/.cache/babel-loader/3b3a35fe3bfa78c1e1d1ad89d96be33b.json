{"ast":null,"code":"const ADD_POST = \"ADD-POST\";\nconst ADD_UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\nlet store = {\n  _state: {\n    //posts\n    profilePage: {\n      postsData: [{\n        id: 1,\n        message: \"Hi, i am john\",\n        likesCount: 12\n      }, {\n        id: 2,\n        message: \"welcome\",\n        likesCount: 18\n      }],\n      newPostText: \"\"\n    },\n    //dialogs\n    dialogsPage: {\n      dialogsData: [{\n        id: 1,\n        name: \"John\"\n      }, {\n        id: 2,\n        name: \"Alan\"\n      }, {\n        id: 3,\n        name: \"Alex\"\n      }, {\n        id: 4,\n        name: \"Sofia\"\n      }],\n      messagesData: [{\n        id: 1,\n        message: \"hi\"\n      }, {\n        id: 2,\n        message: \"hello\"\n      }, {\n        id: 3,\n        message: \"how are you\"\n      }]\n    },\n    //sidebar\n    sideBar: {}\n  },\n\n  _callSubcriber() {\n    console.log(\"state changed\");\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(callback) {\n    this._callSubcriber = callback;\n  },\n\n  _addPost() {\n    let newPost = {\n      id: this._state.profilePage.postsData.length + 1,\n      message: this._state.profilePage.newPostText,\n      likesCount: 0\n    };\n\n    this._state.profilePage.postsData.push(newPost);\n\n    this._state.profilePage.newPostText = \"\";\n\n    this._callSubcriber(this._state);\n  },\n\n  _updateNewPostText(newText) {\n    this._state.profilePage.newPostText = newText;\n\n    this._callSubcriber(this._state);\n  },\n\n  dispatch(action) {\n    if (action.type === ADD_POST) {\n      this._addPost();\n    }\n\n    if (action.type === ADD_UPDATE_NEW_POST_TEXT) {\n      this._updateNewPostText(action.newText);\n    }\n  }\n\n};\nexport const addPostActionCreator = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport const onPostChangeActionCreator = text => {\n  return {\n    type: ADD_UPDATE_NEW_POST_TEXT,\n    newText: text\n  };\n};\nexport default store;","map":{"version":3,"sources":["/home/screamoviolence/myDream/js/react-practise/my-first-app/src/redux/state.js"],"names":["ADD_POST","ADD_UPDATE_NEW_POST_TEXT","store","_state","profilePage","postsData","id","message","likesCount","newPostText","dialogsPage","dialogsData","name","messagesData","sideBar","_callSubcriber","console","log","getState","subscribe","callback","_addPost","newPost","length","push","_updateNewPostText","newText","dispatch","action","type","addPostActionCreator","onPostChangeActionCreator","text"],"mappings":"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","sourcesContent":["const ADD_POST = \"ADD-POST\";\nconst ADD_UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\n\nlet store = {\n  _state: {\n    //posts\n\n    profilePage: {\n      postsData: [\n        { id: 1, message: \"Hi, i am john\", likesCount: 12 },\n        { id: 2, message: \"welcome\", likesCount: 18 },\n      ],\n      newPostText: \"\",\n    },\n    //dialogs\n    dialogsPage: {\n      dialogsData: [\n        { id: 1, name: \"John\" },\n        { id: 2, name: \"Alan\" },\n        { id: 3, name: \"Alex\" },\n        { id: 4, name: \"Sofia\" },\n      ],\n      messagesData: [\n        { id: 1, message: \"hi\" },\n        { id: 2, message: \"hello\" },\n        { id: 3, message: \"how are you\" },\n      ],\n    },\n    //sidebar\n    sideBar: {},\n  },\n  _callSubcriber() {\n    console.log(\"state changed\");\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(callback) {\n    this._callSubcriber = callback;\n  },\n\n  _addPost() {\n    let newPost = {\n      id: this._state.profilePage.postsData.length + 1,\n      message: this._state.profilePage.newPostText,\n      likesCount: 0,\n    };\n\n    this._state.profilePage.postsData.push(newPost);\n    this._state.profilePage.newPostText = \"\";\n    this._callSubcriber(this._state);\n  },\n  _updateNewPostText(newText) {\n    this._state.profilePage.newPostText = newText;\n    this._callSubcriber(this._state);\n  },\n\n  dispatch(action) {\n    if (action.type === ADD_POST) {\n      this._addPost()\n    }\n   if (action.type === ADD_UPDATE_NEW_POST_TEXT) {\n      this._updateNewPostText(action.newText)\n    }\n  },\n};\n\nexport const addPostActionCreator = () => {\n  return {\n    type: ADD_POST,\n  };\n};\n\nexport const onPostChangeActionCreator = (text) => {\n  return {\n    type: ADD_UPDATE_NEW_POST_TEXT,\n    newText: text,\n  };\n};\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}