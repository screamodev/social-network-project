{"ast":null,"code":"var _jsxFileName = \"/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/Login/Login.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { login } from \"../../redux/authReducer\";\nimport { maxLengthCreator, required } from \"../../validators\";\nimport { Input } from \"../common/FormControls/FormsControls\";\nimport classes from \"../common/FormControls/FormControls.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst maxLength30 = maxLengthCreator(30);\n\nconst LoginForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        placeholder: \"Login\",\n        validate: [required, maxLength30],\n        name: \"login\",\n        component: Input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        placeholder: \"Password\",\n        validate: [required, maxLength30],\n        type: \"password\",\n        name: \"password\",\n        component: Input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        type: \"checkbox\",\n        name: \"rememberMe\",\n        component: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), \"remember me\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.formSummaryError,\n      children: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LoginForm;\nconst LoginReduxForm = reduxForm({\n  // a unique name for the form\n  form: \"login\"\n})(LoginForm);\n\nconst Login = props => {\n  const onSubmit = formData => {\n    props.login(formData.login, formData.password, formData.rememberMe); //чрез санку\n  };\n\n  if (props.isLogin) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginReduxForm, {\n      onSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Login;\n\nconst mapStateToProps = state => ({\n  isLogin: state.auth.isLogin\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login); //санка\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"sources":["/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/Login/Login.jsx"],"names":["React","connect","Redirect","Field","reduxForm","login","maxLengthCreator","required","Input","classes","maxLength30","LoginForm","props","handleSubmit","formSummaryError","LoginReduxForm","form","Login","onSubmit","formData","password","rememberMe","isLogin","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,KAAT,QAAsB,yBAAtB;AACA,SAASC,gBAAT,EAA2BC,QAA3B,QAA2C,kBAA3C;AACA,SAASC,KAAT,QAAsB,sCAAtB;AACA,OAAOC,OAAP,MAAoB,gDAApB;;AAGA,MAAMC,WAAW,GAAGJ,gBAAgB,CAAC,EAAD,CAApC;;AAEA,MAAMK,SAAS,GAAIC,KAAD,IAAW;AAC3B,sBACE;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACC,YAAtB;AAAA,4BACE;AAAA,6BAEE,QAAC,KAAD;AAAO,QAAA,WAAW,EAAE,OAApB;AAA6B,QAAA,QAAQ,EAAE,CAACN,QAAD,EAAWG,WAAX,CAAvC;AAAiE,QAAA,IAAI,EAAE,OAAvE;AAAgF,QAAA,SAAS,EAAEF;AAA3F;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,WAAW,EAAE,UAApB;AAAgC,QAAA,QAAQ,EAAE,CAACD,QAAD,EAAWG,WAAX,CAA1C;AAAmE,QAAA,IAAI,EAAE,UAAzE;AAAqF,QAAA,IAAI,EAAE,UAA3F;AAAuG,QAAA,SAAS,EAAEF;AAAlH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF,eAQE;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE,UAAb;AAAyB,QAAA,IAAI,EAAE,YAA/B;AAA6C,QAAA,SAAS,EAAE;AAAxD;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAYE;AAAK,MAAA,SAAS,EAAEC,OAAO,CAACK,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAeE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAtBD;;KAAMH,S;AAwBN,MAAMI,cAAc,GAAGX,SAAS,CAAC;AAC/B;AACAY,EAAAA,IAAI,EAAE;AAFyB,CAAD,CAAT,CAGpBL,SAHoB,CAAvB;;AAKA,MAAMM,KAAK,GAAIL,KAAD,IAAW;AACvB,QAAMM,QAAQ,GAAIC,QAAD,IAAc;AAE7BP,IAAAA,KAAK,CAACP,KAAN,CAAYc,QAAQ,CAACd,KAArB,EAA4Bc,QAAQ,CAACC,QAArC,EAA+CD,QAAQ,CAACE,UAAxD,EAF6B,CAEwC;AACtE,GAHD;;AAKA,MAAIT,KAAK,CAACU,OAAV,EAAmB;AACjB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEJ;AAA1B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAhBD;;MAAMD,K;;AAkBN,MAAMM,eAAe,GAAIC,KAAD,KAAY;AAClCF,EAAAA,OAAO,EAAEE,KAAK,CAACC,IAAN,CAAWH;AADc,CAAZ,CAAxB;;AAIA,eAAerB,OAAO,CAACsB,eAAD,EAAkB;AAAClB,EAAAA;AAAD,CAAlB,CAAP,CAAkCY,KAAlC,CAAf,C,CAAwD","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { login } from \"../../redux/authReducer\";\nimport { maxLengthCreator, required } from \"../../validators\";\nimport { Input } from \"../common/FormControls/FormsControls\";\nimport classes from \"../common/FormControls/FormControls.module.css\";\n\n\nconst maxLength30 = maxLengthCreator(30);\n\nconst LoginForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n\n        <Field placeholder={\"Login\"} validate={[required, maxLength30]}  name={\"login\"} component={Input} />\n      </div>\n      <div>\n        <Field placeholder={\"Password\"} validate={[required, maxLength30]} type={\"password\"} name={\"password\"} component={Input} />\n      </div>\n      <div>\n        <Field type={\"checkbox\"} name={\"rememberMe\"} component={\"input\"} />\n        remember me\n      </div>\n      <div className={classes.formSummaryError}>\n    error\n      </div>\n      <div>\n        <button>Login</button>\n      </div>\n    </form>\n  );\n};\n\nconst LoginReduxForm = reduxForm({\n  // a unique name for the form\n  form: \"login\",\n})(LoginForm);\n\nconst Login = (props) => {\n  const onSubmit = (formData) => {\n    \n    props.login(formData.login, formData.password, formData.rememberMe); //чрез санку\n  };\n\n  if (props.isLogin) {\n    return <Redirect to={\"/profile\"}/>\n  }\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <LoginReduxForm onSubmit={onSubmit} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isLogin: state.auth.isLogin\n})\n\nexport default connect(mapStateToProps, {login})(Login) //санка\n"]},"metadata":{},"sourceType":"module"}