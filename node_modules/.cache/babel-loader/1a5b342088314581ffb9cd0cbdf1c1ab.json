{"ast":null,"code":"import { authAPI } from \"../components/api/api\";\nimport { stopSubmit } from \"redux-form\";\nimport { getAuthUserData } from \"./authReducer\";\nconst INITIALIZED_SUCCESS = \"INITIALIZED-SUCCESS\"; //const TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\";\n\nlet initialState = {\n  initialized: false,\n  email: null,\n  login: null,\n  isLogin: false,\n  isFetching: true\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return { ...state,\n        initialized: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initializedSuccess = () => ({\n  type: INITIALIZED_SUCCESS\n}); //thunka\n\nexport const initializeApp = () => dispatch => {\n  let promise = dispatch(getAuthUserData());\n  Promise.all([promise]).then(() => {\n    dispatch(initializedSuccess());\n  });\n}; //export const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\n\nexport default appReducer;","map":{"version":3,"sources":["/home/screamoviolence/myDream/js/react-practise/my-first-app/src/redux/appReducer.js"],"names":["authAPI","stopSubmit","getAuthUserData","INITIALIZED_SUCCESS","initialState","initialized","email","login","isLogin","isFetching","appReducer","state","action","type","initializedSuccess","initializeApp","dispatch","promise","Promise","all","then"],"mappings":"AAAA,SAASA,OAAT,QAAwB,uBAAxB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,eAAT,QAAgC,eAAhC;AAEA,MAAMC,mBAAmB,GAAG,qBAA5B,C,CAEA;;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,KADI;AAEjBC,EAAAA,KAAK,EAAE,IAFU;AAGjBC,EAAAA,KAAK,EAAE,IAHU;AAIjBC,EAAAA,OAAO,EAAE,KAJQ;AAKjBC,EAAAA,UAAU,EAAE;AALK,CAAnB;;AAQA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,mBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELN,QAAAA,WAAW,EAAE;AAFR,OAAP;;AAIF;AACE,aAAOM,KAAP;AAPJ;AASD,CAVD;;AAYA,OAAO,MAAMG,kBAAkB,GAAG,OAAO;AACvCD,EAAAA,IAAI,EAAEV;AADiC,CAAP,CAA3B,C,CAIP;;AAEA,OAAO,MAAMY,aAAa,GAAG,MAAOC,QAAD,IAAc;AAC/C,MAAIC,OAAO,GAAGD,QAAQ,CAACd,eAAe,EAAhB,CAAtB;AACAgB,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACF,OAAD,CAAZ,EAAuBG,IAAvB,CAA4B,MAAM;AAChCJ,IAAAA,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;AACD,GAFD;AAGD,CALM,C,CAOP;;AAEA,eAAeJ,UAAf","sourcesContent":["import { authAPI } from \"../components/api/api\";\nimport { stopSubmit } from \"redux-form\";\nimport { getAuthUserData } from \"./authReducer\";\n\nconst INITIALIZED_SUCCESS = \"INITIALIZED-SUCCESS\";\n\n//const TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\";\n\nlet initialState = {\n  initialized: false,\n  email: null,\n  login: null,\n  isLogin: false,\n  isFetching: true,\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return {\n        ...state,\n        initialized: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const initializedSuccess = () => ({\n  type: INITIALIZED_SUCCESS,\n});\n\n//thunka\n\nexport const initializeApp = () => (dispatch) => {\n  let promise = dispatch(getAuthUserData());\n  Promise.all([promise]).then(() => {\n    dispatch(initializedSuccess());\n  });\n};\n\n//export const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\n\nexport default appReducer;\n"]},"metadata":{},"sourceType":"module"}