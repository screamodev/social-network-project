{"ast":null,"code":"var _jsxFileName = \"/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/Profile/ProfileContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { compose } from \"redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { getUserProfile, getUserStatus } from \"../../redux/profileReducer\";\nimport Profile from \"./Profile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = 2;\n    }\n\n    this.props.getUserProfile(userId); // this.props.getUserStatus(status)\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Profile, { ...this.props,\n      profile: this.props.profile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status\n}); // let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\n// old\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\n// export default connect(mapStateToProps, { getUserProfile })(\n//   WithUrlDataContainerComponent\n// );\n\n\nexport default compose(connect(mapStateToProps, {\n  getUserProfile,\n  getUserStatus\n}), withRouter //withAuthRedirect //эдакий конвейер снизу вверх\n)(ProfileContainer);","map":{"version":3,"sources":["/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/Profile/ProfileContainer.jsx"],"names":["React","connect","withRouter","compose","withAuthRedirect","getUserProfile","getUserStatus","Profile","ProfileContainer","Component","componentDidMount","userId","props","match","params","render","profile","mapStateToProps","state","profilePage","status"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,4BAA9C;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,gBAAN,SAA+BR,KAAK,CAACS,SAArC,CAA+C;AAC7CC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AAEA,QAAI,CAACA,MAAL,EAAa;AACXA,MAAAA,MAAM,GAAG,CAAT;AACD;;AACD,SAAKC,KAAL,CAAWP,cAAX,CAA0BM,MAA1B,EANkB,CAOnB;AACA;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBAAO,QAAC,OAAD,OAAa,KAAKH,KAAlB;AAAyB,MAAA,OAAO,EAAE,KAAKA,KAAL,CAAWI;AAA7C;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAb4C;;AAkB/C,IAAIC,eAAe,GAAIC,KAAD,KAAY;AAC9BF,EAAAA,OAAO,EAAEE,KAAK,CAACC,WAAN,CAAkBH,OADG;AAE9BI,EAAAA,MAAM,EAAEF,KAAK,CAACC,WAAN,CAAkBC;AAFI,CAAZ,CAAtB,C,CAKA;AAEA;AAEA;AAEA;AACA;AACA;;;AAEA,eAAejB,OAAO,CACpBF,OAAO,CAACgB,eAAD,EAAkB;AAAEZ,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAlB,CADa,EAEpBJ,UAFoB,CAGpB;AAHoB,CAAP,CAIbM,gBAJa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { compose } from \"redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { getUserProfile, getUserStatus } from \"../../redux/profileReducer\";\nimport Profile from \"./Profile\";\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n    \n    if (!userId) {\n      userId = 2;\n    }\n    this.props.getUserProfile(userId);\n   // this.props.getUserStatus(status)\n  }\n\n  render() {\n    return <Profile {...this.props} profile={this.props.profile} />;\n  }\n\n\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,    \n    status: state.profilePage.status,      \n  });\n\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\n\n// old\n\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\n\n// export default connect(mapStateToProps, { getUserProfile })(\n//   WithUrlDataContainerComponent\n// );\n\nexport default compose(\n  connect(mapStateToProps, { getUserProfile, getUserStatus }),\n  withRouter,\n  //withAuthRedirect //эдакий конвейер снизу вверх\n)(ProfileContainer);\n"]},"metadata":{},"sourceType":"module"}