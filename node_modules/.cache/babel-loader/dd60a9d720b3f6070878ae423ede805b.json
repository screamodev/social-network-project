{"ast":null,"code":"const FOLLOW = \"FOLlOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET-USERS\";\nlet initialState = {\n  usersData: [{\n    id: 1,\n    followed: true,\n    fullName: \"Arseniy\",\n    status: \"i am fullstack developer\",\n    location: {\n      city: \"Kharkow\",\n      country: \"Ukraine\"\n    }\n  }, {\n    id: 2,\n    followed: false,\n    fullName: \"Dimitrii\",\n    status: \"i am frontend developer\",\n    location: {\n      city: \"Magadan\",\n      country: \"Russia\"\n    }\n  }, {\n    id: 3,\n    followed: false,\n    fullName: \"Alex\",\n    status: \"i am backend developer\",\n    location: {\n      city: \"Amur\",\n      country: \"Russia\"\n    }\n  }],\n  newPostText: \"\"\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        usersData: state.usersData.map(user => {\n          if (user.id === action.userId) {\n            return { ...user,\n              followed: true\n            };\n          }\n\n          return user;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        usersData: state.usersData.map(user => {\n          if (user.id === action.userId) {\n            return { ...user,\n              followed: false\n            };\n          }\n\n          return user;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        usersData: [...state.usersData, ...action.users]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const followAC = () => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowAC = () => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsersAC = users => ({\n  type: SET_USERS,\n  users\n});\nexport default usersReducer;","map":{"version":3,"sources":["/home/screamoviolence/myDream/js/react-practise/my-first-app/src/redux/usersReducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","initialState","usersData","id","followed","fullName","status","location","city","country","newPostText","usersReducer","state","action","type","map","user","userId","users","followAC","unfollowAC","setUsersAC"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,CACT;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,QAAQ,EAAE,IAFZ;AAGEC,IAAAA,QAAQ,EAAE,SAHZ;AAIEC,IAAAA,MAAM,EAAE,0BAJV;AAKEC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,OAAO,EAAE;AAA5B;AALZ,GADS,EAQT;AACEN,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,QAAQ,EAAE,KAFZ;AAGEC,IAAAA,QAAQ,EAAE,UAHZ;AAIEC,IAAAA,MAAM,EAAE,yBAJV;AAKEC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,OAAO,EAAE;AAA5B;AALZ,GARS,EAeT;AACEN,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,QAAQ,EAAE,KAFZ;AAGEC,IAAAA,QAAQ,EAAE,MAHZ;AAIEC,IAAAA,MAAM,EAAE,wBAJV;AAKEC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,OAAO,EAAE;AAAzB;AALZ,GAfS,CADM;AAwBjBC,EAAAA,WAAW,EAAE;AAxBI,CAAnB;;AA2BA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGX,YAAT,EAAuBY,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKhB,MAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELV,QAAAA,SAAS,EAAEU,KAAK,CAACV,SAAN,CAAgBa,GAAhB,CAAqBC,IAAD,IAAU;AACvC,cAAIA,IAAI,CAACb,EAAL,KAAYU,MAAM,CAACI,MAAvB,EAA+B;AAC7B,mBAAO,EAAE,GAAGD,IAAL;AAAWZ,cAAAA,QAAQ,EAAE;AAArB,aAAP;AACD;;AACD,iBAAOY,IAAP;AACD,SALU;AAFN,OAAP;;AAUF,SAAKjB,QAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELV,QAAAA,SAAS,EAAEU,KAAK,CAACV,SAAN,CAAgBa,GAAhB,CAAqBC,IAAD,IAAU;AACvC,cAAIA,IAAI,CAACb,EAAL,KAAYU,MAAM,CAACI,MAAvB,EAA+B;AAC7B,mBAAO,EAAE,GAAGD,IAAL;AAAWZ,cAAAA,QAAQ,EAAE;AAArB,aAAP;AACD;;AACD,iBAAOY,IAAP;AACD,SALU;AAFN,OAAP;;AAUF,SAAKhB,SAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELV,QAAAA,SAAS,EAAE,CAAC,GAAGU,KAAK,CAACV,SAAV,EAAqB,GAAGW,MAAM,CAACK,KAA/B;AAFN,OAAP;;AAKF;AACE,aAAON,KAAP;AA9BJ;AAgCD,CAjCD;;AAmCA,OAAO,MAAMO,QAAQ,GAAG,OAAO;AAAEL,EAAAA,IAAI,EAAEhB,MAAR;AAAgBmB,EAAAA;AAAhB,CAAP,CAAjB;AACP,OAAO,MAAMG,UAAU,GAAG,OAAO;AAAEN,EAAAA,IAAI,EAAEf,QAAR;AAAkBkB,EAAAA;AAAlB,CAAP,CAAnB;AACP,OAAO,MAAMI,UAAU,GAAIH,KAAD,KAAY;AAAEJ,EAAAA,IAAI,EAAEd,SAAR;AAAmBkB,EAAAA;AAAnB,CAAZ,CAAnB;AAEP,eAAeP,YAAf","sourcesContent":["const FOLLOW = \"FOLlOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET-USERS\";\n\nlet initialState = {\n  usersData: [\n    {\n      id: 1,\n      followed: true,\n      fullName: \"Arseniy\",\n      status: \"i am fullstack developer\",\n      location: { city: \"Kharkow\", country: \"Ukraine\" },\n    },\n    {\n      id: 2,\n      followed: false,\n      fullName: \"Dimitrii\",\n      status: \"i am frontend developer\",\n      location: { city: \"Magadan\", country: \"Russia\" },\n    },\n    {\n      id: 3,\n      followed: false,\n      fullName: \"Alex\",\n      status: \"i am backend developer\",\n      location: { city: \"Amur\", country: \"Russia\" },\n    },\n  ],\n  newPostText: \"\",\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        usersData: state.usersData.map((user) => {\n          if (user.id === action.userId) {\n            return { ...user, followed: true };\n          }\n          return user;\n        }),\n      };\n\n    case UNFOLLOW:\n      return {\n        ...state,\n        usersData: state.usersData.map((user) => {\n          if (user.id === action.userId) {\n            return { ...user, followed: false };\n          }\n          return user;\n        }),\n      };\n\n    case SET_USERS:\n      return {\n        ...state,\n        usersData: [...state.usersData, ...action.users],\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const followAC = () => ({ type: FOLLOW, userId });\nexport const unfollowAC = () => ({ type: UNFOLLOW, userId });\nexport const setUsersAC = (users) => ({ type: SET_USERS, users });\n\nexport default usersReducer;\n"]},"metadata":{},"sourceType":"module"}