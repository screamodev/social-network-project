{"ast":null,"code":"var _jsxFileName = \"/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/Login/Login.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { login } from \"../../redux/authReducer\";\nimport { createField, Input } from \"../common/FormControls/FormsControls\";\nimport { maxLengthCreator, required } from \"../../utils/validators/index\";\nimport classes from \"../common/FormControls/FormControls.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst maxLength30 = maxLengthCreator(30);\n\nconst LoginForm = ({\n  handleSubmit,\n  error\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [createField('Email', \"email\", [required, maxLength30], Input), createField('Password', \"password\", [required, maxLength30], Input, {\n      type: 'password'\n    }), createField(null, \"rememberMe\", [], Input, {\n      type: \"checkbox\"\n    }, 'remember me'), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.formSummaryError,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LoginForm;\nconst LoginReduxForm = reduxForm({\n  // a unique name for the form\n  form: \"login\"\n})(LoginForm);\n\nconst Login = props => {\n  const onSubmit = formData => {\n    props.login(formData.login, formData.password, formData.rememberMe); //чрез санку\n  };\n\n  if (props.isLogin) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginReduxForm, {\n      onSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Login;\n\nconst mapStateToProps = state => ({\n  isLogin: state.auth.isLogin\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login); //санка\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"sources":["/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/Login/Login.jsx"],"names":["React","connect","Redirect","Field","reduxForm","login","createField","Input","maxLengthCreator","required","classes","maxLength30","LoginForm","handleSubmit","error","props","type","formSummaryError","LoginReduxForm","form","Login","onSubmit","formData","password","rememberMe","isLogin","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,KAAT,QAAsB,yBAAtB;AACA,SAASC,WAAT,EAAsBC,KAAtB,QAAmC,sCAAnC;AACA,SAASC,gBAAT,EAA2BC,QAA3B,QAA2C,8BAA3C;AAEA,OAAOC,OAAP,MAAoB,gDAApB;;AAEA,MAAMC,WAAW,GAAGH,gBAAgB,CAAC,EAAD,CAApC;;AAEA,MAAMI,SAAS,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAcC,EAAAA;AAAd,CAAD,KAA0B;AAC1C,sBACE;AAAM,IAAA,QAAQ,EAAEC,KAAK,CAACF,YAAtB;AAAA,eACGP,WAAW,CAAC,OAAD,EAAU,OAAV,EAAkB,CAACG,QAAD,EAAUE,WAAV,CAAlB,EAA0CJ,KAA1C,CADd,EAQGD,WAAW,CAAC,UAAD,EAAa,UAAb,EAAwB,CAACG,QAAD,EAAUE,WAAV,CAAxB,EAAgDJ,KAAhD,EAAuD;AAACS,MAAAA,IAAI,EAAE;AAAP,KAAvD,CARd,EAgBGV,WAAW,CAAC,IAAD,EAAO,YAAP,EAAoB,EAApB,EAAwBC,KAAxB,EAA+B;AAACS,MAAAA,IAAI,EAAC;AAAN,KAA/B,EAAkD,aAAlD,CAhBd,eAmBE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAnBF,EAsBIF,KAAK,iBAAI;AAAK,MAAA,SAAS,EAAEJ,OAAO,CAACO,gBAAxB;AAAA,gBAA2CH;AAA3C;AAAA;AAAA;AAAA;AAAA,YAtBb;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA3BD;;KAAMF,S;AA6BN,MAAMM,cAAc,GAAGd,SAAS,CAAC;AAC/B;AACAe,EAAAA,IAAI,EAAE;AAFyB,CAAD,CAAT,CAGpBP,SAHoB,CAAvB;;AAKA,MAAMQ,KAAK,GAAIL,KAAD,IAAW;AACvB,QAAMM,QAAQ,GAAIC,QAAD,IAAc;AAC7BP,IAAAA,KAAK,CAACV,KAAN,CAAYiB,QAAQ,CAACjB,KAArB,EAA4BiB,QAAQ,CAACC,QAArC,EAA+CD,QAAQ,CAACE,UAAxD,EAD6B,CACwC;AACtE,GAFD;;AAIA,MAAIT,KAAK,CAACU,OAAV,EAAmB;AACjB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEJ;AAA1B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAfD;;MAAMD,K;;AAiBN,MAAMM,eAAe,GAAIC,KAAD,KAAY;AAClCF,EAAAA,OAAO,EAAEE,KAAK,CAACC,IAAN,CAAWH;AADc,CAAZ,CAAxB;;AAIA,eAAexB,OAAO,CAACyB,eAAD,EAAkB;AAAErB,EAAAA;AAAF,CAAlB,CAAP,CAAoCe,KAApC,CAAf,C,CAA2D","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { login } from \"../../redux/authReducer\";\nimport { createField, Input } from \"../common/FormControls/FormsControls\";\nimport { maxLengthCreator, required } from \"../../utils/validators/index\";\n\nimport classes from \"../common/FormControls/FormControls.module.css\";\n\nconst maxLength30 = maxLengthCreator(30);\n\nconst LoginForm = ({handleSubmit,error}) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      {createField('Email', \"email\",[required,maxLength30], Input)}\n        {/* <Field\n          placeholder={\"Login\"}\n          validate={[required, maxLength30]}\n          name={\"login\"}\n          component={Input} \n         /> */}\n      {createField('Password', \"password\",[required,maxLength30], Input, {type: 'password'})}\n        {/* <Field\n          placeholder={\"Password\"}\n          validate={[required, maxLength30]}\n          type={\"password\"}\n          name={\"password\"}\n          component={Input}\n        /> */}\n      {createField(null, \"rememberMe\",[], Input, {type:\"checkbox\"}, 'remember me')}\n        {/* <Field type={\"checkbox\"} name={\"rememberMe\"} component={\"input\"} />\n        remember me */}\n      <div>\n        <button>Login</button>\n      </div>\n      { error && <div className={classes.formSummaryError}>{error}</div>}\n    </form>\n  );\n};\n\nconst LoginReduxForm = reduxForm({\n  // a unique name for the form\n  form: \"login\",\n})(LoginForm);\n\nconst Login = (props) => {\n  const onSubmit = (formData) => {\n    props.login(formData.login, formData.password, formData.rememberMe); //чрез санку\n  };\n\n  if (props.isLogin) {\n    return <Redirect to={\"/profile\"} />;\n  }\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <LoginReduxForm onSubmit={onSubmit} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isLogin: state.auth.isLogin,\n});\n\nexport default connect(mapStateToProps, { login })(Login); //санка\n"]},"metadata":{},"sourceType":"module"}