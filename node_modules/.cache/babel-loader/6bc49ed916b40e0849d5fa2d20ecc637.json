{"ast":null,"code":"import React from \"react\";\nimport { addPostActionCreator, onPostChangeActionCreator } from \"../../../redux/profileReducer\";\nimport MyPosts from \"./MyPosts\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToProps = state => {\n  return {\n    dialogsData: state.profilePage.postsData,\n    newPostText: state.profilePage.newPostText\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addPost: () => {\n      dispatch(addPostActionCreator());\n    },\n    onPostChange: text => {\n      dispatch(onPostChangeActionCreator(text));\n    }\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts); // конект создает контейнерную колмпоненту\n\nexport default MyPostsContainer;","map":{"version":3,"sources":["/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/Profile/MyPosts/MyPostsContainer.jsx"],"names":["React","addPostActionCreator","onPostChangeActionCreator","MyPosts","connect","mapStateToProps","state","dialogsData","profilePage","postsData","newPostText","mapDispatchToProps","dispatch","addPost","onPostChange","text","MyPostsContainer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,oBADF,EAEEC,yBAFF,QAGO,+BAHP;AAIA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACE,WAAN,CAAkBC,SAD1B;AAELC,IAAAA,WAAW,EAAEJ,KAAK,CAACE,WAAN,CAAkBE;AAF1B,GAAP;AAID,CALD;;AAOA,IAAIC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACLC,IAAAA,OAAO,EAAE,MAAM;AACbD,MAAAA,QAAQ,CAACX,oBAAoB,EAArB,CAAR;AACD,KAHI;AAILa,IAAAA,YAAY,EAAGC,IAAD,IAAU;AACtBH,MAAAA,QAAQ,CAACV,yBAAyB,CAACa,IAAD,CAA1B,CAAR;AACD;AANI,GAAP;AAQD,CATD;;AAWA,MAAMC,gBAAgB,GAAGZ,OAAO,CAACC,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CR,OAA7C,CAAzB,C,CAAgF;;AAEhF,eAAea,gBAAf","sourcesContent":["import React from \"react\";\nimport {\n  addPostActionCreator,\n  onPostChangeActionCreator,\n} from \"../../../redux/profileReducer\";\nimport MyPosts from \"./MyPosts\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsData: state.profilePage.postsData,\n    newPostText: state.profilePage.newPostText,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: () => {\n      dispatch(addPostActionCreator());\n    },\n    onPostChange: (text) => {\n      dispatch(onPostChangeActionCreator(text));\n    },\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts); // конект создает контейнерную колмпоненту\n\nexport default MyPostsContainer;\n"]},"metadata":{},"sourceType":"module"}