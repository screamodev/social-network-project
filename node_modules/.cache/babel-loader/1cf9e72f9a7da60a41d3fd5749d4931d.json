{"ast":null,"code":"var _jsxFileName = \"/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/Users/UsersContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { follow, setCurrentPage, unfollow, toggleFollowingProgress, requestUsers } from \"../../redux/usersReducer\";\nimport Users from \"./Users.jsx\";\nimport PreLoader from \"../common/preLoader/preLoader\";\nimport { compose } from \"redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount, getUsers } from \"../../redux/usersSelectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.requestUsers(pageNumber, this.props.pageSize);\n    };\n  }\n\n  componentDidMount() {\n    this.props.requestUsers(this.props.currentPage, this.props.pageSize);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(PreLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 34\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        unfollow: this.props.unfollow,\n        follow: this.props.follow,\n        usersData: this.props.usersData,\n        onPageChanged: this.onPageChanged,\n        followingInProgress: this.props.followingInProgress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    usersData: getUsers(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state)\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setCurrentPage,\n  toggleFollowingProgress,\n  requestUsers\n}))(UsersContainer);","map":{"version":3,"sources":["/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/Users/UsersContainer.jsx"],"names":["React","connect","follow","setCurrentPage","unfollow","toggleFollowingProgress","requestUsers","Users","PreLoader","compose","withAuthRedirect","getCurrentPage","getFollowingInProgress","getIsFetching","getPageSize","getTotalUsersCount","getUsers","UsersContainer","Component","onPageChanged","pageNumber","props","pageSize","componentDidMount","currentPage","render","isFetching","totalUsersCount","usersData","followingInProgress","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,MADF,EAEEC,cAFF,EAGEC,QAHF,EAIEC,uBAJF,EAKEC,YALF,QAMO,0BANP;AAOA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,SACEC,cADF,EAEEC,sBAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,kBALF,EAMEC,QANF,QAOO,4BAPP;;;;AASA,MAAMC,cAAN,SAA6BjB,KAAK,CAACkB,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAK3CC,aAL2C,GAK1BC,UAAD,IAAgB;AAC9B,WAAKC,KAAL,CAAWf,YAAX,CAAwBc,UAAxB,EAAoC,KAAKC,KAAL,CAAWC,QAA/C;AACD,KAP0C;AAAA;;AAC3CC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,KAAL,CAAWf,YAAX,CAAwB,KAAKe,KAAL,CAAWG,WAAnC,EAAgD,KAAKH,KAAL,CAAWC,QAA3D;AACD;;AAMDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,iBACG,KAAKJ,KAAL,CAAWK,UAAX,gBAAwB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAxB,GAAwC,IAD3C,eAEE,QAAC,KAAD;AACE,QAAA,eAAe,EAAE,KAAKL,KAAL,CAAWM,eAD9B;AAEE,QAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWC,QAFvB;AAGE,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWG,WAH1B;AAIE,QAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWjB,QAJvB;AAKE,QAAA,MAAM,EAAE,KAAKiB,KAAL,CAAWnB,MALrB;AAME,QAAA,SAAS,EAAE,KAAKmB,KAAL,CAAWO,SANxB;AAOE,QAAA,aAAa,EAAE,KAAKT,aAPtB;AAQE,QAAA,mBAAmB,EAAE,KAAKE,KAAL,CAAWQ;AARlC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAeD;;AAzB0C;;AA4B7C,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACLH,IAAAA,SAAS,EAAEZ,QAAQ,CAACe,KAAD,CADd;AAELT,IAAAA,QAAQ,EAAER,WAAW,CAACiB,KAAD,CAFhB;AAGLJ,IAAAA,eAAe,EAAEZ,kBAAkB,CAACgB,KAAD,CAH9B;AAILP,IAAAA,WAAW,EAAEb,cAAc,CAACoB,KAAD,CAJtB;AAKLL,IAAAA,UAAU,EAAEb,aAAa,CAACkB,KAAD,CALpB;AAMLF,IAAAA,mBAAmB,EAAEjB,sBAAsB,CAACmB,KAAD;AANtC,GAAP;AAQD,CATD;;AAWA,eAAetB,OAAO,CACpBR,OAAO,CAAC6B,eAAD,EAAkB;AACvB5B,EAAAA,MADuB;AAEvBE,EAAAA,QAFuB;AAGvBD,EAAAA,cAHuB;AAIvBE,EAAAA,uBAJuB;AAKvBC,EAAAA;AALuB,CAAlB,CADa,CAAP,CAQbW,cARa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  follow,\n  setCurrentPage,\n  unfollow,\n  toggleFollowingProgress,\n  requestUsers,\n} from \"../../redux/usersReducer\";\nimport Users from \"./Users.jsx\";\nimport PreLoader from \"../common/preLoader/preLoader\";\nimport { compose } from \"redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport {\n  getCurrentPage,\n  getFollowingInProgress,\n  getIsFetching,\n  getPageSize,\n  getTotalUsersCount,\n  getUsers,\n} from \"../../redux/usersSelectors\";\n\nclass UsersContainer extends React.Component {\n  componentDidMount() {\n    this.props.requestUsers(this.props.currentPage, this.props.pageSize);\n  }\n\n  onPageChanged = (pageNumber) => {\n    this.props.requestUsers(pageNumber, this.props.pageSize);\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.isFetching ? <PreLoader /> : null}\n        <Users\n          totalUsersCount={this.props.totalUsersCount}\n          pageSize={this.props.pageSize}\n          currentPage={this.props.currentPage}\n          unfollow={this.props.unfollow}\n          follow={this.props.follow}\n          usersData={this.props.usersData}\n          onPageChanged={this.onPageChanged}\n          followingInProgress={this.props.followingInProgress}\n        />\n      </>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    usersData: getUsers(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state),\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, {\n    follow,\n    unfollow,\n    setCurrentPage,\n    toggleFollowingProgress,\n    requestUsers,\n  })\n)(UsersContainer);\n"]},"metadata":{},"sourceType":"module"}