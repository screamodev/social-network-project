{"ast":null,"code":"import { usersAPI } from \"../components/api/api\";\nimport { updateObjectInArray } from \"../utils/object-helpers\";\nconst FOLLOW = \"FOLlOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET-USERS\";\nconst SET_CURRENT_PAGE = \"SET-CURRENT-PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"SET-TOTAL-USERS-COUNT\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\";\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\nlet initialState = {\n  usersData: [],\n  pageSize: 10,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        usersData: updateObjectInArray(state.usersData, action.userId, 'id', {\n          followed: true\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        usersData: updateObjectInArray(state.usersData, action.userId, 'id', {\n          followed: false\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        usersData: action.usersData\n      };\n\n    case SET_CURRENT_PAGE:\n      return { ...state,\n        currentPage: action.currentPage\n      };\n\n    case SET_TOTAL_USERS_COUNT:\n      return { ...state,\n        totalUsersCount: action.count\n      };\n\n    case TOGGLE_IS_FETCHING:\n      return { ...state,\n        isFetching: action.isFetching\n      };\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return { ...state,\n        followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const followSuccess = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowSuccess = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsers = usersData => ({\n  type: SET_USERS,\n  usersData\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCount = count => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\n  isFetching,\n  userId\n}); //sanki\n\nexport const requestUsers = (page, pageSize) => async dispatch => {\n  dispatch(toggleIsFetching(true));\n  let data = await usersAPI.getUsers(page, pageSize);\n  dispatch(toggleIsFetching(false));\n  dispatch(setCurrentPage(page));\n  dispatch(setUsers(data.items));\n  dispatch(setTotalUsersCount(data.totalCount));\n};\nexport const follow = userId => async dispatch => {\n  //функция высшего порядка возвращает санку, а санка через замыкание стучится к данным\n  let apiMethod = usersAPI.follow.bind(usersAPI);\n  let actionCreator = followSuccess;\n  followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\n};\nexport const unfollow = userId => async dispatch => {\n  let apiMethod = usersAPI.unfollow.bind(usersAPI);\n  let actionCreator = unfollowSuccess;\n  followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\n};\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n  dispatch(toggleFollowingProgress(true, userId));\n  let data = await apiMethod(userId);\n\n  if (data.resultCode == 0) {\n    dispatch(actionCreator(userId));\n  }\n\n  dispatch(toggleFollowingProgress(false, userId));\n};\n\nexport default usersReducer;","map":{"version":3,"sources":["/home/screamoviolence/myDream/js/react-practise/my-first-app/src/redux/usersReducer.js"],"names":["usersAPI","updateObjectInArray","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","usersData","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","userId","followed","count","filter","id","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","requestUsers","page","dispatch","data","getUsers","items","totalCount","follow","apiMethod","bind","actionCreator","followUnfollowFlow","unfollow","resultCode"],"mappings":"AAAA,SAASA,QAAT,QAAyB,uBAAzB;AACA,SAASC,mBAAT,QAAoC,yBAApC;AAEA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,qBAAqB,GAAG,uBAA9B;AAEA,MAAMC,kBAAkB,GAAG,oBAA3B;AACA,MAAMC,4BAA4B,GAAG,8BAArC;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,eAAe,EAAE,CAHA;AAIjBC,EAAAA,WAAW,EAAE,CAJI;AAKjBC,EAAAA,UAAU,EAAE,IALK;AAMjBC,EAAAA,mBAAmB,EAAE;AANJ,CAAnB;;AASA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKjB,MAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELP,QAAAA,SAAS,EAAET,mBAAmB,CAACgB,KAAK,CAACP,SAAP,EAAkBQ,MAAM,CAACE,MAAzB,EAAiC,IAAjC,EAAuC;AAACC,UAAAA,QAAQ,EAAC;AAAV,SAAvC;AAFzB,OAAP;;AAKF,SAAKlB,QAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELP,QAAAA,SAAS,EAAET,mBAAmB,CAACgB,KAAK,CAACP,SAAP,EAAkBQ,MAAM,CAACE,MAAzB,EAAiC,IAAjC,EAAuC;AAACC,UAAAA,QAAQ,EAAC;AAAV,SAAvC;AAFzB,OAAP;;AAKF,SAAKjB,SAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELP,QAAAA,SAAS,EAAEQ,MAAM,CAACR;AAFb,OAAP;;AAIF,SAAKL,gBAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELJ,QAAAA,WAAW,EAAEK,MAAM,CAACL;AAFf,OAAP;;AAIF,SAAKP,qBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELL,QAAAA,eAAe,EAAEM,MAAM,CAACI;AAFnB,OAAP;;AAIF,SAAKf,kBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELH,QAAAA,UAAU,EAAEI,MAAM,CAACJ;AAFd,OAAP;;AAIF,SAAKN,4BAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELF,QAAAA,mBAAmB,EAAEG,MAAM,CAACJ,UAAP,GACjB,CAAC,GAAGG,KAAK,CAACF,mBAAV,EAA+BG,MAAM,CAACE,MAAtC,CADiB,GAEjBH,KAAK,CAACF,mBAAN,CAA0BQ,MAA1B,CAAkCC,EAAD,IAAQA,EAAE,IAAIN,MAAM,CAACE,MAAtD;AAJC,OAAP;;AAMF;AACE,aAAOH,KAAP;AAzCJ;AA2CD,CA5CD;;AA8CA,OAAO,MAAMQ,aAAa,GAAIL,MAAD,KAAa;AAAED,EAAAA,IAAI,EAAEjB,MAAR;AAAgBkB,EAAAA;AAAhB,CAAb,CAAtB;AACP,OAAO,MAAMM,eAAe,GAAIN,MAAD,KAAa;AAAED,EAAAA,IAAI,EAAEhB,QAAR;AAAkBiB,EAAAA;AAAlB,CAAb,CAAxB;AACP,OAAO,MAAMO,QAAQ,GAAIjB,SAAD,KAAgB;AAAES,EAAAA,IAAI,EAAEf,SAAR;AAAmBM,EAAAA;AAAnB,CAAhB,CAAjB;AACP,OAAO,MAAMkB,cAAc,GAAIf,WAAD,KAAkB;AAC9CM,EAAAA,IAAI,EAAEd,gBADwC;AAE9CQ,EAAAA;AAF8C,CAAlB,CAAvB;AAIP,OAAO,MAAMgB,kBAAkB,GAAIP,KAAD,KAAY;AAC5CH,EAAAA,IAAI,EAAEb,qBADsC;AAE5CgB,EAAAA;AAF4C,CAAZ,CAA3B;AAIP,OAAO,MAAMQ,gBAAgB,GAAIhB,UAAD,KAAiB;AAC/CK,EAAAA,IAAI,EAAEZ,kBADyC;AAE/CO,EAAAA;AAF+C,CAAjB,CAAzB;AAIP,OAAO,MAAMiB,uBAAuB,GAAG,CAACjB,UAAD,EAAaM,MAAb,MAAyB;AAC9DD,EAAAA,IAAI,EAAEX,4BADwD;AAE9DM,EAAAA,UAF8D;AAG9DM,EAAAA;AAH8D,CAAzB,CAAhC,C,CAMP;;AAEA,OAAO,MAAMY,YAAY,GAAG,CAACC,IAAD,EAAOtB,QAAP,KAAoB,MAAOuB,QAAP,IAAoB;AAClEA,EAAAA,QAAQ,CAACJ,gBAAgB,CAAC,IAAD,CAAjB,CAAR;AACA,MAAIK,IAAI,GAAG,MAAMnC,QAAQ,CAACoC,QAAT,CAAkBH,IAAlB,EAAwBtB,QAAxB,CAAjB;AACAuB,EAAAA,QAAQ,CAACJ,gBAAgB,CAAC,KAAD,CAAjB,CAAR;AACAI,EAAAA,QAAQ,CAACN,cAAc,CAACK,IAAD,CAAf,CAAR;AACAC,EAAAA,QAAQ,CAACP,QAAQ,CAACQ,IAAI,CAACE,KAAN,CAAT,CAAR;AACAH,EAAAA,QAAQ,CAACL,kBAAkB,CAACM,IAAI,CAACG,UAAN,CAAnB,CAAR;AACD,CAPM;AASP,OAAO,MAAMC,MAAM,GAAInB,MAAD,IAAY,MAAOc,QAAP,IAAoB;AACpD;AACA,MAAIM,SAAS,GAAGxC,QAAQ,CAACuC,MAAT,CAAgBE,IAAhB,CAAqBzC,QAArB,CAAhB;AACA,MAAI0C,aAAa,GAAGjB,aAApB;AACAkB,EAAAA,kBAAkB,CAACT,QAAD,EAAWd,MAAX,EAAmBoB,SAAnB,EAA8BE,aAA9B,CAAlB;AACD,CALM;AAOP,OAAO,MAAME,QAAQ,GAAIxB,MAAD,IAAY,MAAOc,QAAP,IAAoB;AACtD,MAAIM,SAAS,GAAGxC,QAAQ,CAAC4C,QAAT,CAAkBH,IAAlB,CAAuBzC,QAAvB,CAAhB;AACA,MAAI0C,aAAa,GAAGhB,eAApB;AAEAiB,EAAAA,kBAAkB,CAACT,QAAD,EAAWd,MAAX,EAAmBoB,SAAnB,EAA8BE,aAA9B,CAAlB;AACD,CALM;;AAOP,MAAMC,kBAAkB,GAAG,OACzBT,QADyB,EAEzBd,MAFyB,EAGzBoB,SAHyB,EAIzBE,aAJyB,KAKtB;AACHR,EAAAA,QAAQ,CAACH,uBAAuB,CAAC,IAAD,EAAOX,MAAP,CAAxB,CAAR;AAEA,MAAIe,IAAI,GAAG,MAAMK,SAAS,CAACpB,MAAD,CAA1B;;AACA,MAAIe,IAAI,CAACU,UAAL,IAAmB,CAAvB,EAA0B;AACxBX,IAAAA,QAAQ,CAACQ,aAAa,CAACtB,MAAD,CAAd,CAAR;AACD;;AACDc,EAAAA,QAAQ,CAACH,uBAAuB,CAAC,KAAD,EAAQX,MAAR,CAAxB,CAAR;AACD,CAbD;;AAeA,eAAeJ,YAAf","sourcesContent":["import { usersAPI } from \"../components/api/api\";\nimport { updateObjectInArray } from \"../utils/object-helpers\";\n\nconst FOLLOW = \"FOLlOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET-USERS\";\nconst SET_CURRENT_PAGE = \"SET-CURRENT-PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"SET-TOTAL-USERS-COUNT\";\n\nconst TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\";\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\n\nlet initialState = {\n  usersData: [],\n  pageSize: 10,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: [],\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        usersData: updateObjectInArray(state.usersData, action.userId, 'id', {followed:true})\n      };\n\n    case UNFOLLOW:\n      return {\n        ...state,\n        usersData: updateObjectInArray(state.usersData, action.userId, 'id', {followed:false})\n      };\n\n    case SET_USERS:\n      return {\n        ...state,\n        usersData: action.usersData,\n      };\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.currentPage,\n      };\n    case SET_TOTAL_USERS_COUNT:\n      return {\n        ...state,\n        totalUsersCount: action.count,\n      };\n    case TOGGLE_IS_FETCHING:\n      return {\n        ...state,\n        isFetching: action.isFetching,\n      };\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return {\n        ...state,\n        followingInProgress: action.isFetching\n          ? [...state.followingInProgress, action.userId]\n          : state.followingInProgress.filter((id) => id != action.userId),\n      };\n    default:\n      return state;\n  }\n};\n\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\nexport const setUsers = (usersData) => ({ type: SET_USERS, usersData });\nexport const setCurrentPage = (currentPage) => ({\n  type: SET_CURRENT_PAGE,\n  currentPage,\n});\nexport const setTotalUsersCount = (count) => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count,\n});\nexport const toggleIsFetching = (isFetching) => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching,\n});\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\n  isFetching,\n  userId,\n});\n\n//sanki\n\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\n  dispatch(toggleIsFetching(true));\n  let data = await usersAPI.getUsers(page, pageSize);\n  dispatch(toggleIsFetching(false));\n  dispatch(setCurrentPage(page));\n  dispatch(setUsers(data.items));\n  dispatch(setTotalUsersCount(data.totalCount));\n};\n\nexport const follow = (userId) => async (dispatch) => {\n  //функция высшего порядка возвращает санку, а санка через замыкание стучится к данным\n  let apiMethod = usersAPI.follow.bind(usersAPI);\n  let actionCreator = followSuccess;\n  followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\n};\n\nexport const unfollow = (userId) => async (dispatch) => {\n  let apiMethod = usersAPI.unfollow.bind(usersAPI);\n  let actionCreator = unfollowSuccess;\n\n  followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\n};\n\nconst followUnfollowFlow = async (\n  dispatch,\n  userId,\n  apiMethod,\n  actionCreator\n) => {\n  dispatch(toggleFollowingProgress(true, userId));\n\n  let data = await apiMethod(userId);\n  if (data.resultCode == 0) {\n    dispatch(actionCreator(userId));\n  }\n  dispatch(toggleFollowingProgress(false, userId));\n};\n\nexport default usersReducer;\n"]},"metadata":{},"sourceType":"module"}