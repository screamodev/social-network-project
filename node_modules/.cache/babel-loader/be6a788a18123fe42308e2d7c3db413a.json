{"ast":null,"code":"var _jsxFileName = \"/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/Dialogs/Dialogs.jsx\";\nimport React from \"react\";\nimport classes from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport MessageItem from \"./MessageItem/MessageItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dialogs = props => {\n  return /*#__PURE__*/_jsxDEV(StoreContext.Consumer, {\n    children: store => {\n      let state = props.state;\n      let dialogsElements = props.dialogsData.map(dialog => /*#__PURE__*/_jsxDEV(DialogItem, {\n        name: dialog.name,\n        id: dialog.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this));\n      let messagesElements = props.messagesData.map(message => /*#__PURE__*/_jsxDEV(MessageItem, {\n        message: message.message,\n        id: message.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this));\n      let newMessageBody = state.newMessageBody;\n\n      let onSendMessageClick = () => {\n        // props.store.dispatch(sendMessageCreator());\n        props.sendMessage();\n      };\n\n      let onNewMessageChange = e => {\n        let body = e.target.value;\n        props.updateNewMessageBody(body); //props.store.dispatch(updateNewMessageBodyCreator(body));\n      };\n\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        className: classes.dialogs,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.dialogsItems,\n          children: dialogsElements\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.messages,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: messagesElements\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: newMessageBody,\n                onChange: onNewMessageChange,\n                placeholder: \"Enter your message...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: onSendMessageClick,\n                children: \"send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Dialogs;\nexport default Dialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"sources":["/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/Dialogs/Dialogs.jsx"],"names":["React","classes","DialogItem","MessageItem","Dialogs","props","store","state","dialogsElements","dialogsData","map","dialog","name","id","messagesElements","messagesData","message","newMessageBody","onSendMessageClick","sendMessage","onNewMessageChange","e","body","target","value","updateNewMessageBody","dialogs","dialogsItems","messages"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,sBACE,QAAC,YAAD,CAAc,QAAd;AAAA,cACIC,KAAD,IAAW;AACV,UAAIC,KAAK,GAAGF,KAAK,CAACE,KAAlB;AAEA,UAAIC,eAAe,GAAGH,KAAK,CAACI,WAAN,CAAkBC,GAAlB,CAAuBC,MAAD,iBAC1C,QAAC,UAAD;AAAY,QAAA,IAAI,EAAEA,MAAM,CAACC,IAAzB;AAA+B,QAAA,EAAE,EAAED,MAAM,CAACE;AAA1C;AAAA;AAAA;AAAA;AAAA,cADoB,CAAtB;AAGA,UAAIC,gBAAgB,GAAGT,KAAK,CAACU,YAAN,CAAmBL,GAAnB,CAAwBM,OAAD,iBAC5C,QAAC,WAAD;AAAa,QAAA,OAAO,EAAEA,OAAO,CAACA,OAA9B;AAAuC,QAAA,EAAE,EAAEA,OAAO,CAACH;AAAnD;AAAA;AAAA;AAAA;AAAA,cADqB,CAAvB;AAIA,UAAII,cAAc,GAAGV,KAAK,CAACU,cAA3B;;AAEA,UAAIC,kBAAkB,GAAG,MAAM;AAC7B;AACAb,QAAAA,KAAK,CAACc,WAAN;AACD,OAHD;;AAKA,UAAIC,kBAAkB,GAAIC,CAAD,IAAO;AAC9B,YAAIC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAApB;AACAnB,QAAAA,KAAK,CAACoB,oBAAN,CAA2BH,IAA3B,EAF8B,CAG9B;AACD,OAJD;;AAMA;AAAA;AAAK,QAAA,SAAS,EAAErB,OAAO,CAACyB,OAAxB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAEzB,OAAO,CAAC0B,YAAxB;AAAA,oBAAuCnB;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAEP,OAAO,CAAC2B,QAAxB;AAAA,kCACE;AAAA,sBAAMd;AAAN;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,oCACE;AAAA,qCACE;AACE,gBAAA,KAAK,EAAEG,cADT;AAEE,gBAAA,QAAQ,EAAEG,kBAFZ;AAGE,gBAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE;AAAA,qCACE;AAAQ,gBAAA,OAAO,EAAEF,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBD;AA1CH;AAAA;AAAA;AAAA;AAAA,UADF;AA8CD,CA/CD;;KAAMd,O;AAiDN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport classes from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport MessageItem from \"./MessageItem/MessageItem\";\n\nconst Dialogs = (props) => {\n  return (\n    <StoreContext.Consumer>\n      {(store) => {\n        let state = props.state;\n\n        let dialogsElements = props.dialogsData.map((dialog) => (\n          <DialogItem name={dialog.name} id={dialog.id} />\n        ));\n        let messagesElements = props.messagesData.map((message) => (\n          <MessageItem message={message.message} id={message.id} />\n        ));\n\n        let newMessageBody = state.newMessageBody;\n\n        let onSendMessageClick = () => {\n          // props.store.dispatch(sendMessageCreator());\n          props.sendMessage();\n        };\n\n        let onNewMessageChange = (e) => {\n          let body = e.target.value;\n          props.updateNewMessageBody(body);\n          //props.store.dispatch(updateNewMessageBodyCreator(body));\n        };\n\n        <div className={classes.dialogs}>\n          <div className={classes.dialogsItems}>{dialogsElements}</div>\n          <div className={classes.messages}>\n            <div>{messagesElements}</div>\n            <div>\n              <div>\n                <textarea\n                  value={newMessageBody}\n                  onChange={onNewMessageChange}\n                  placeholder=\"Enter your message...\"\n                ></textarea>\n              </div>\n              <div>\n                <button onClick={onSendMessageClick}>send</button>\n              </div>\n            </div>\n          </div>\n        </div>;\n      }}\n    </StoreContext.Consumer>\n  );\n};\n\nexport default Dialogs;\n"]},"metadata":{},"sourceType":"module"}