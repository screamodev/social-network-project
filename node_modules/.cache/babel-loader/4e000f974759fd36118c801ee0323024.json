{"ast":null,"code":"var _jsxFileName = \"/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/common/Pagination/Pagination.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport classes from \"./Pagination.module.css\";\nimport cn from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = ({\n  currentPage,\n  totalItemsCount,\n  pageSize,\n  onPageChanged,\n  portionSize = 10\n}) => {\n  _s();\n\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let {\n    portionNumber,\n    setPortionNumber\n  } = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.pagination,\n    children: [portionNumber > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setPortionNumber(portionNumber - 1);\n      },\n      children: \"\\u25C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 27\n    }, this), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: currentPage == p && classes.selectedPage,\n        onClick: () => {\n          onPageChanged(p);\n        },\n        children: p\n      }, p, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this);\n    }), portionCount > portionNumber && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setPortionNumber(portionNumber + 1);\n      },\n      children: \"\\u25B6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Pagination, \"vYQ0gGkzwL+tUY5cCHulgmihBy4=\");\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/home/screamoviolence/myDream/js/react-practise/my-first-app/src/components/common/Pagination/Pagination.jsx"],"names":["React","useState","classes","cn","Pagination","currentPage","totalItemsCount","pageSize","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","pagination","filter","p","map","selectedPage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,EAAP,MAAe,YAAf;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAaC,EAAAA,eAAb;AAA6BC,EAAAA,QAA7B;AAAsCC,EAAAA,aAAtC;AAAoDC,EAAAA,WAAW,GAAG;AAAlE,CAAD,KAA2E;AAAA;;AAC5F,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUN,eAAe,GAAGC,QAA5B,CAAjB;AAEA,MAAIM,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAsC;AACpCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACD;;AAED,MAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGD,WAAvB,CAAnB;AACA,MAAI;AAACQ,IAAAA,aAAD;AAAgBC,IAAAA;AAAhB,MAAoCjB,QAAQ,CAAC,CAAD,CAAhD;AACA,MAAIkB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAuBR,WAAvB,GAAqC,CAAjE;AACA,MAAIW,sBAAsB,GAAGH,aAAa,GAAGR,WAA7C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACmB,UAAxB;AAAA,eACCJ,aAAa,GAAG,CAAhB,iBAAqB;AAAQ,MAAA,OAAO,EAAE,MAAM;AAACC,QAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAoC,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADtB,EAEGJ,KAAK,CAACS,MAAN,CAAaC,CAAC,IAAIA,CAAC,IAAIJ,qBAAL,IAA8BI,CAAC,IAAEH,sBAAnD,EAA2EI,GAA3E,CAAgFD,CAAD,IAAO;AACrF,0BACE;AACE,QAAA,SAAS,EAAElB,WAAW,IAAIkB,CAAf,IAAoBrB,OAAO,CAACuB,YADzC;AAGE,QAAA,OAAO,EAAE,MAAM;AACbjB,UAAAA,aAAa,CAACe,CAAD,CAAb;AACD,SALH;AAAA,kBAOGA;AAPH,SAEOA,CAFP;AAAA;AAAA;AAAA;AAAA,cADF;AAWD,KAZA,CAFH,EAeIP,YAAY,GAAGC,aAAf,iBACI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAEC,QAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAqC,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAjCD;;GAAMb,U;;KAAAA,U;AAkCN,eAAeA,UAAf","sourcesContent":["import React, {useState} from \"react\";\nimport classes from \"./Pagination.module.css\";\nimport cn from \"classnames\"\n\nconst Pagination = ({currentPage,totalItemsCount,pageSize,onPageChanged,portionSize = 10}) => {\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n  let pages = [];\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize)\n  let {portionNumber, setPortionNumber} = useState(1)\n  let leftPortionPageNumber = (portionNumber - 1 ) * portionSize + 1\n  let rightPortionPageNumber = portionNumber * portionSize\n\n  return (\n    <div className={classes.pagination}>\n    {portionNumber > 1 && <button onClick={() => {setPortionNumber(portionNumber - 1)}}>◀</button> }\n      {pages.filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber).map((p) => {\n        return (\n          <span\n            className={currentPage == p && classes.selectedPage}\n            key={p}\n            onClick={() => {\n              onPageChanged(p);\n            }}\n          >\n            {p}\n          </span>\n        );\n      })}\n      { portionCount > portionNumber &&\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>▶</button> }\n    </div>\n  );\n};\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}